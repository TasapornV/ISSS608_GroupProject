<<<<<<< HEAD
filter(month %in% c(1:12)) %>%
filter(DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive',
'Private Apartments and Condominiums',
'Landed Properties', 'Others')) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd"))
#Add Private vs Public Classification
dwelling$class <- case_when(
dwelling$DWELLING_TYPE %in% c('Private Apartments and Condominiums',
'Landed Properties', 'Others') ~ "Private",
dwelling$DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive') ~ "Public")
dwelling <- dwelling %>%
mutate(type = DWELLING_TYPE) %>%
mutate(consumption = consumption_GWh) %>%
mutate(title = 'dwelling')
select(c('year','month','date','type','consumption','class'))
dwelling <- dwelling %>%
mutate(type = DWELLING_TYPE) %>%
mutate(consumption = consumption_GWh) %>%
mutate(title = 'dwelling') %>%
select(c('year','month','date','type','consumption','class'))
town <- town %>%
mutate(type = Description) %>%
mutate(consumption = kwh_per_acc) %>%
select(c('year','month','date','type','consumption','class'))
dwelling <- T3.4 %>%
filter(year %in% c(2005:2022)) %>%
filter(month %in% c(1:12)) %>%
filter(DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive',
'Private Apartments and Condominiums',
'Landed Properties', 'Others')) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd"))
#Add Private vs Public Classification
dwelling$class <- case_when(
dwelling$DWELLING_TYPE %in% c('Private Apartments and Condominiums',
'Landed Properties', 'Others') ~ "Private",
dwelling$DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive') ~ "Public")
dwelling <- dwelling %>%
mutate(type = DWELLING_TYPE) %>%
mutate(consumption = consumption_GWh) %>%
mutate(title = 'dwelling') %>%
select(c('year','month','date','type','consumption','class', 'title'))
town <- town %>%
mutate(type = Description) %>%
mutate(consumption = kwh_per_acc) %>%
select(c('year','month','date','type','consumption','class'))
town <- subset(T3.5, Description != 'Overall' & Description !='Central Region' &
Description !='East Region' & Description !='North East Region' &
Description !='North Region' & Description !='West Region' &
kwh_per_acc != 's' & dwelling_type != 'Private Housing' &
dwelling_type != 'Public Housing' & month != 'Annual') %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd")) %>%
mutate(monthyear = format(as.Date(date), "%b %Y"))
#Adding housing type
town$type <- case_when(
town$dwelling_type %in% c('Private Apartments and Condominiums',
'Landed Properties', 'Others') ~ "Private",
town$dwelling_type %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive') ~ "Public")
dwelling <- dwelling %>%
mutate(type = DWELLING_TYPE) %>%
mutate(consumption = consumption_GWh) %>%
mutate(title = 'Dwelling Type') %>%
select(c('year','month','date','type','consumption','class', 'title'))
dwelling <- T3.4 %>%
filter(year %in% c(2005:2022)) %>%
filter(month %in% c(1:12)) %>%
filter(DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive',
'Private Apartments and Condominiums',
'Landed Properties', 'Others')) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd"))
#Add Private vs Public Classification
dwelling$class <- case_when(
dwelling$DWELLING_TYPE %in% c('Private Apartments and Condominiums',
'Landed Properties', 'Others') ~ "Private",
dwelling$DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive') ~ "Public")
town <- subset(T3.5, Description != 'Overall' & Description !='Central Region' &
Description !='East Region' & Description !='North East Region' &
Description !='North Region' & Description !='West Region' &
kwh_per_acc != 's' & dwelling_type != 'Private Housing' &
dwelling_type != 'Public Housing' & month != 'Annual') %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd")) %>%
mutate(monthyear = format(as.Date(date), "%b %Y"))
#Adding housing type
town$type <- case_when(
town$dwelling_type %in% c('Private Apartments and Condominiums',
'Landed Properties', 'Others') ~ "Private",
town$dwelling_type %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive') ~ "Public")
dwelling <- dwelling %>%
mutate(type = DWELLING_TYPE) %>%
mutate(consumption = consumption_GWh) %>%
mutate(title = 'Dwelling Type') %>%
select(c('year','month','date','type','consumption','class', 'title'))
town <- town %>%
mutate(type = Description) %>%
mutate(consumption = kwh_per_acc/1000) %>%
mutate(title = 'Town') %>%
select(c('year','month','date','type','consumption','class','title'))
dwelling <- T3.4 %>%
filter(year %in% c(2005:2022)) %>%
filter(month %in% c(1:12)) %>%
filter(DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive',
'Private Apartments and Condominiums',
'Landed Properties', 'Others')) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd"))
#Add Private vs Public Classification
dwelling$class <- case_when(
dwelling$DWELLING_TYPE %in% c('Private Apartments and Condominiums',
'Landed Properties', 'Others') ~ "Private",
dwelling$DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive') ~ "Public")
town <- subset(T3.5, Description != 'Overall' & Description !='Central Region' &
Description !='East Region' & Description !='North East Region' &
Description !='North Region' & Description !='West Region' &
kwh_per_acc != 's' & dwelling_type != 'Private Housing' &
dwelling_type != 'Public Housing' & month != 'Annual') %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd")) %>%
mutate(monthyear = format(as.Date(date), "%b %Y"))
#Adding housing type
town$type <- case_when(
town$dwelling_type %in% c('Private Apartments and Condominiums',
'Landed Properties', 'Others') ~ "Private",
town$dwelling_type %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive') ~ "Public")
dwelling <- dwelling %>%
mutate(type = DWELLING_TYPE) %>%
mutate(consumption = consumption_GWh) %>%
mutate(title = 'Dwelling Type') %>%
select(c('year','month','date','type','consumption','class', 'title'))
town <- town %>%
mutate(type = Description) %>%
mutate(consumption = kwh_per_acc/1000) %>%
mutate(title = 'Town') %>%
select(c('year','month','date','type','consumption','title'))
region <- town %>%
group_by(Region, monthyear) %>%
mutate(consumption = sum(kwh_per_acc/1000)) %>%
mutate(type = Region) %>%
mutate(title = 'Region') %>%
select(c('year','month','date','type','consumption','title'))
dwelling <- T3.4 %>%
filter(year %in% c(2005:2022)) %>%
filter(month %in% c(1:12)) %>%
filter(DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive',
'Private Apartments and Condominiums',
'Landed Properties', 'Others')) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd"))
#Add Private vs Public Classification
dwelling$class <- case_when(
dwelling$DWELLING_TYPE %in% c('Private Apartments and Condominiums',
'Landed Properties', 'Others') ~ "Private",
dwelling$DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive') ~ "Public")
town <- subset(T3.5, Description != 'Overall' & Description !='Central Region' &
Description !='East Region' & Description !='North East Region' &
Description !='North Region' & Description !='West Region' &
kwh_per_acc != 's' & dwelling_type != 'Private Housing' &
dwelling_type != 'Public Housing' & month != 'Annual') %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd")) %>%
mutate(monthyear = format(as.Date(date), "%b %Y"))
#Adding housing type
town$type <- case_when(
town$dwelling_type %in% c('Private Apartments and Condominiums',
'Landed Properties', 'Others') ~ "Private",
town$dwelling_type %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive') ~ "Public")
dwelling_tog <- dwelling %>%
mutate(type = DWELLING_TYPE) %>%
mutate(consumption = consumption_GWh) %>%
mutate(title = 'Dwelling Type') %>%
select(c('year','month','date','type','consumption','class', 'title'))
town_tog <- town %>%
mutate(type = Description) %>%
mutate(consumption = kwh_per_acc/1000) %>%
mutate(title = 'Town') %>%
select(c('year','month','date','type','consumption','title'))
region_tog <- town %>%
group_by(Region, monthyear) %>%
mutate(consumption = sum(kwh_per_acc/1000)) %>%
mutate(type = Region) %>%
mutate(title = 'Region') %>%
select(c('year','month','date','type','consumption','title'))
View(town_tog)
View(region_tog)
town <- subset(T3.5, Description != 'Overall' & Description !='Central Region' &
Description !='East Region' & Description !='North East Region' &
Description !='North Region' & Description !='West Region' &
kwh_per_acc != 's' & dwelling_type != 'Private Housing' &
dwelling_type != 'Public Housing' & month != 'Annual') %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd")) %>%
mutate(monthyear = format(as.Date(date), "%b %Y"))
#Adding housing type
town$type <- case_when(
town$dwelling_type %in% c('Private Apartments and Condominiums',
'Landed Properties', 'Others') ~ "Private",
town$dwelling_type %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive') ~ "Public")
dwelling_tog <- dwelling %>%
mutate(type = DWELLING_TYPE) %>%
mutate(consumption = consumption_GWh) %>%
mutate(title = 'Dwelling Type') %>%
select(c('year','month','date','type','consumption','class', 'title'))
town_tog <- town %>%
mutate(type = Description) %>%
mutate(consumption = kwh_per_acc/1000) %>%
mutate(title = 'Town') %>%
select(c('year','month','date','type','consumption','title'))
region_tog <- town %>%
group_by(Region, monthyear) %>%
mutate(consumption = sum(kwh_per_acc/1000)) %>%
mutate(type = Region) %>%
mutate(title = 'Region') %>%
select(c('year','month','date','type','consumption','title'))
dwelling_tog <- dwelling %>%
mutate(type = DWELLING_TYPE) %>%
mutate(consumption = consumption_GWh) %>%
mutate(title = 'Dwelling Type') %>%
select(c('year','month','date','type','consumption','class', 'title'))
town_tog <- town %>%
mutate(type = Description) %>%
mutate(consumption = kwh_per_acc) %>%
mutate(title = 'Town') %>%
select(c('year','month','date','type','consumption','title'))
region_tog <- town %>%
group_by(Region, monthyear) %>%
summarize(consumption = sum(kwh_per_acc)) %>%
mutate(type = Region) %>%
mutate(title = 'Region') %>%
select(c('year','month','date','type','consumption','title'))
dwelling_tog <- dwelling %>%
mutate(type = DWELLING_TYPE) %>%
mutate(consumption = consumption_GWh) %>%
mutate(title = 'Dwelling Type') %>%
select(c('year','month','date','type','consumption','class', 'title'))
town_tog <- town %>%
mutate(type = Description) %>%
mutate(consumption = kwh_per_acc) %>%
mutate(title = 'Town') %>%
select(c('year','month','date','type','consumption','title'))
region_tog <- town %>%
=======
>>>>>>> 0b4d88db8f7e5b2d83c15e7d8261ff878883c7a5
group_by(Region, monthyear) %>%
summarize(consumption = sum(kwh_per_acc)) %>%
#  mutate(type = Region) %>%
#  mutate(title = 'Region') %>%
#  select(c('year','month','date','type','consumption','title'))
dwelling_tog <- dwelling %>%
mutate(type = DWELLING_TYPE) %>%
mutate(consumption = consumption_GWh) %>%
mutate(title = 'Dwelling Type') %>%
select(c('year','month','date','type','consumption','class', 'title'))
town_tog <- town %>%
mutate(type = Description) %>%
mutate(consumption = kwh_per_acc) %>%
mutate(title = 'Town') %>%
select(c('year','month','date','type','consumption','title'))
region_tog <- town %>%
group_by(Region, monthyear) %>%
summarize(consumption = sum(kwh_per_acc))
#  mutate(type = Region) %>%
#  mutate(title = 'Region') %>%
#  select(c('year','month','date','type','consumption','title'))
region <- town %>%
group_by(Region, monthyear) %>%
mutate(consumption = sum(kwh_per_acc))
View(region)
region <- subset(town, select(-c('Description')) %>%
group_by(Region, monthyear) %>%
mutate(consumption = sum(kwh_per_acc))
region <- subset(town, select(-c('Description'))) %>%
group_by(Region, monthyear) %>%
mutate(consumption = sum(kwh_per_acc))
region <- subset(town, select(-c(Description))) %>%
group_by(Region, monthyear) %>%
mutate(consumption = sum(kwh_per_acc))
region <- subset(town, select = -c(Description)) %>%
group_by(Region, monthyear) %>%
mutate(consumption = sum(kwh_per_acc))
region <- subset(town, select = -c(Description)) %>%
group_by(Region, monthyear) %>%
mutate(consumption = sum(kwh_per_acc))
#load lib
pacman::p_load(scales, viridis, hrbrthemes, lubridate, gridExtra, knitr, data.table, ggthemes, CGPfunctions, ggHoriPlot, gapminder, gganimate, ggbraid, ggstatsplot, ggiraph, plotly, performance, nortest, patchwork, ggdist, ggridges, reactable, reactablefmtr, gt, gtExtras, tidyverse)
dwelling <- T3.4 %>%
filter(year %in% c(2005:2022)) %>%
filter(month %in% c(1:12)) %>%
filter(DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive',
'Private Apartments and Condominiums',
'Landed Properties', 'Others')) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd"))
#Add Private vs Public Classification
dwelling$class <- case_when(
dwelling$DWELLING_TYPE %in% c('Private Apartments and Condominiums',
'Landed Properties', 'Others') ~ "Private",
dwelling$DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive') ~ "Public")
<<<<<<< HEAD
dwelling <- T3.4 %>%
filter(year %in% c(2005:2022)) %>%
filter(month %in% c(1:12)) %>%
filter(DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive',
'Private Apartments and Condominiums',
'Landed Properties', 'Others')) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd"))
#Add Private vs Public Classification
dwelling$class <- case_when(
dwelling$DWELLING_TYPE %in% c('Private Apartments and Condominiums',
'Landed Properties', 'Others') ~ "Private",
dwelling$DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive') ~ "Public")
=======
>>>>>>> 0b4d88db8f7e5b2d83c15e7d8261ff878883c7a5
town <- subset(T3.5, Description != 'Overall' & Description !='Central Region' &
Description !='East Region' & Description !='North East Region' &
Description !='North Region' & Description !='West Region' &
kwh_per_acc != 's' & dwelling_type != 'Private Housing' &
dwelling_type != 'Public Housing' & month != 'Annual') %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
<<<<<<< HEAD
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd")) %>%
mutate(monthyear = format(as.Date(date), "%b %Y"))
=======
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd"))
>>>>>>> 0b4d88db8f7e5b2d83c15e7d8261ff878883c7a5
#Adding housing type
town$type <- case_when(
town$dwelling_type %in% c('Private Apartments and Condominiums',
'Landed Properties', 'Others') ~ "Private",
town$dwelling_type %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive') ~ "Public")
<<<<<<< HEAD
region <- subset(town, select = -c(Description)) %>%
group_by(Region, monthyear) %>%
mutate(consumption = sum(kwh_per_acc))
View(region)
View(town)
region <- town %>%
group_by(Region, monthyear) %>%
summarise(consumption = sum(kwh_per_acc))
region <- town %>%
group_by(Region, monthyear) %>%
summarise(consumption = sum(kwh_per_acc),
date = date)
region <- town %>%
group_by(Region, monthyear) %>%
summarise(consumption = sum(kwh_per_acc),
date = date,
month = month,
year = year)
region <- town %>%
group_by(Region, monthyear) %>%
summarise(consumption = sum(kwh_per_acc),
date = date,
month = month,
year = year) %>%
select(Region, consumption, date, month, year)
region <- town %>%
group_by(Region, monthyear) %>%
summarise(consumption = sum(kwh_per_acc),
date = date,
month = month,
year = year) %>%
drop(monthyear)
region <- town %>%
group_by(Region, monthyear) %>%
summarise(consumption = sum(kwh_per_acc),
date = date,
month = month,
year = year)
region <- town %>%
group_by(Region, monthyear) %>%
summarise(consumption = sum(kwh_per_acc))
packages = c('tidyverse', 'ggstatsplot', 'psych', 'lubridate', 'ggrepel', 'plotly', "tidyr", "readr")
for(p in packages){
if(!require(p,character.only = T)){
install.packages(p)
}
library(p,character.only = T)
}
library(readr)
T2.3 <- read_csv("data/T2-3.csv")
saveRDS(T2.3, file = "RDS/T2-3.rds")
#T2.6 <- read_csv("data/T2-6.csv")
#saveRDS(T2.6, file = "RDS/T2-6.rds")
T3.4 <- read_csv("data/T3-4.csv")
saveRDS(T3.4, file = "RDS/T3-4.rds")
T3.5 <- read_csv("data/T3-5.csv")
saveRDS(T3.5, file = "RDS/T3-5.rds")
T3.6 <- read_csv("data/T3-6.csv")
saveRDS(T3.6, file = "RDS/T3-6.rds")
T3.7 <- read_csv("data/T3-7.csv")
saveRDS(T3.7, file = "RDS/T3-7.rds")
T3.8 <- read_csv("data/T3-8.csv")
saveRDS(T3.8, file = "RDS/T3-8.rds")
T3.9 <- read_csv("data/T3-9.csv")
saveRDS(T3.9, file = "RDS/T3-9.rds")
# T5.1 <- read_csv("data/T5-1.csv")
# saveRDS(T5.1, file = "RDS/T5-1.rds")
#
# T5.2 <- read_csv("data/T5-2.csv")
# saveRDS(T5.2, file = "RDS/T5-2.rds")
#T5.3 <- read_csv("data/T5-3.csv")
#saveRDS(T5.3, file = "RDS/T5-3.rds")
# T5.4 <- read_csv("data/T5-4.csv")
# saveRDS(T5.4, file = "RDS/T5-4.rds")
#
# T5.5 <- read_csv("data/T5-5.csv")
# saveRDS(T5.4, file = "RDS/T5-5.rds")
# Filter the required data for clustering
# remove month = "Annual"
# remove dewlling_type/description = Overall
# year 2018 and onwards due to missing data
# exclude "%region" in description
# Exclude Pioneer as data is incomplete
clus_data <- T3.5 %>%
filter(month != "Annual" &
year > 2017 &
dwelling_type != "Overall" &
!str_detect(Description,"Region|Pioneer|Overall"))
# transform dataset
# convert kwh into numbers
clus_data$kwh_per_acc <- as.numeric(clus_data$kwh_per_acc)
# join month and year into a date
clus_data$date <- parse_date_time(paste(clus_data$year, clus_data$month), orders=c("%Y %m"))
# drop month and year column
clus_data <- subset(clus_data, select=-c(month, year, Region)) %>%
arrange(date)
# pivot wider
clus <- clus_data %>%
pivot_wider(names_from=date, values_from=kwh_per_acc)
# omit na
clus <- na.omit(clus)
clus <- clus %>% relocate(Description, .before = dwelling_type)
# clus_data
# clus
library(heatmaply)
# parameter 1: distance method ("euclidean", "maximum", "manhattan", "canberra", "binary" or "minkowski")
# parameter 2: hclust method ("ward.D", "ward.D2","single","complete","average", "mcquitty", "median" or "centroid")
# parameter 3: number of clusters
# parameter 4: seriate (Optimal leaf ordering, Gruvaeus and Wainer, mean, none)
# parameter 5: scale / normalize / percentize (the code for this part is different)
# Remove dwelling type
clus_group1 <- clus[,-c(2)] %>%
group_by(Description) %>%
summarise_each(list(sum))
# making "Description" the row name (index)
row.names(clus_group1) <- clus_group1$Description
# Making it into a matrix
clus_matrix1 <- data.matrix(clus_group1)
# plot
heatmaply(clus_matrix1[,-c(1)],
scale = "column",
dist_method = "euclidean",
hclust_method = "average",
Colv=NA,
seriate = "none",
k_row = 3,
margins = c(NA,200,50,NA),
colors = viridis(
n= 256, alpha=1,
begin=0, end=1,
option="viridis"),
fontsize_row = 5,
fontsize_col = 5,
main="Hierarchical Clustering",
ylab = "Towns",
xlab = "Time")
# parameter: method
# user will need to input the distance calculated method here to determine which clustering method is optimal
library(dendextend)
clustering <- dist(normalize(clus_group1,-c(1)), method="euclidean")
dend_expend(clustering)[[3]]
#
# library(dendextend)
# clustering <- dist(as.numeric(normalize(clus_group1,-c(1))), method="euclidean")
# dend_expend(clustering)[[3]]
# once user have gotten the clustering method from above, they need to input that to find the optimal number of k
clust2 <- hclust(clustering, method = "mcquitty")
num_k <- find_k(clust2)
plot(num_k)
## Add clusters to dataframe
num_clus <- cutree(clust2, k=3)
clus_hc <- cbind(clus_group1, cluster = as.factor(num_clus))
## Add clusters to dataframe
num_clus <- cutree(clust2, k=3)
clus_hc <- cbind(clus_group1, cluster = as.factor(num_clus))
library(sf)
# reading the map file
mpsz <- st_read(dsn = 'master-plan-2014-subzone-boundary-web-shp',
layer = 'MP14_SUBZONE_WEB_PL',
crs = 3414)
singapore <- st_transform(mpsz, 4326)
library(tmap)
# change Description to upper case
clus_hc$Description <- toupper(clus_hc$Description)
# Preparing the choropleth map
mpsz_clus <- left_join(singapore, clus_hc, by = c("PLN_AREA_N" = "Description"))
tmap_mode("view")
tm_shape(mpsz_clus)+
tmap_options(check.and.fix = TRUE)+
tm_fill("cluster", id=paste("PLN_AREA_N"),
style = "pretty",
palette = "Blues") +
tm_borders(alpha = 0.7)
shiny::runApp('Shiny_App_G9')
shiny::runApp('Shiny_App_G9')
=======
region <- town %>%
group_by(date, Region) %>%
summarise(consumption = sum(kwh_per_acc))
dwelling_tog <- dwelling %>%
mutate(type = DWELLING_TYPE) %>%
mutate(consumption = consumption_GWh) %>%
mutate(title = 'Dwelling Type') %>%
mutate(unit = 'GWh') %>%
select(c('year','month','date','type','consumption','class', 'title', 'unit'))
town_tog <- town %>%
mutate(type = Description) %>%
mutate(consumption = kwh_per_acc) %>%
mutate(title = 'Town') %>%
mutate(unit = 'kWh') %>%
select(c('year','month','date','type','consumption','title', 'unit'))
region_tog <- region %>%
mutate(type = Region) %>%
mutate(title = 'Region') %>%
mutate(year = year(date)) %>%
mutate (month = month(date)) %>%
mutate(unit = 'kWh') %>%
select(c('year','month','date','type','consumption','title', 'unit'))
#choose between dwelling_tog, town_tog, region_tog
chosendata <- town_tog
#choosing the time period
startyear <- 2005
endyear <- 2021
#choose between dwelling_tog, town_tog, region_tog
chosendata <- town_tog
#choosing the time period
startyear <- 2005
endyear <- 2021
#linechart # backup
ggplot(data = chosendata, aes(x = date)) +
geom_line(aes(y = consumption, colour = type)) +
labs(title = paste0("Electricity Consumption by ",chosendata[1,6]),
x = "Year", y = paste0("Consumption, ",chosendata[1,7])) +
scale_color_discrete(name="") +
theme(legend.position="bottom")
View(town_tog)
#choose between dwelling_tog, town_tog, region_tog
chosendata <- region_tog
#choosing the time period
startyear <- 2005
endyear <- 2021
#linechart # backup
ggplot(data = chosendata, aes(x = date)) +
geom_line(aes(y = consumption, colour = type)) +
labs(title = paste0("Electricity Consumption by ",chosendata[1,6]),
x = "Year", y = paste0("Consumption, ",chosendata[1,7])) +
scale_color_discrete(name="") +
theme(legend.position="bottom")
# cycleplot
select_type <- 'Central Region'
select_cycle <- chosendata %>%
filter(type %in% c(select_type)) %>%
mutate(year = factor(year, levels = 2005:2022),
month = factor(month, levels = 1:12))
#Computing year average by months
hline.data <- select_cycle %>%
group_by(month) %>%
summarise(avg_cons = mean(consumption))
#Plotting cycle plot for electricity consumption per dwelling type
ggplot() +
geom_line(data = select_cycle,
aes(x=year,y=consumption, group=month), colour = "black") +
geom_hline(data = hline.data,
aes(yintercept=avg_cons),
linetype=6,
colour="red",
linewidth=0.5) +
facet_grid(~month) +
theme(axis.text.x = element_text(angle=90, vjust=1, hjust=1)) +
labs(title = paste0("Cycleplot for each ",chosendata[1,6],"'s consumption (" ,
chosendata[1,7],
"), Jan 2005-Jun 2022"),
subtitle = paste0(chosendata[1,6],": ",select_type)) +
scale_x_discrete(breaks=c("2005","2010","2015","2020")) +
xlab("") +
ylab(paste0("Consumption, ",chosendata[1,7]))
View(town)
town <- subset(T3.5, Description != 'Overall' & Description !='Central Region' &
Description !='East Region' & Description !='North East Region' &
Description !='North Region' & Description !='West Region' &
kwh_per_acc != 's' & dwelling_type != 'Private Housing' &
dwelling_type != 'Public Housing' & month != 'Annual') %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd"))
#Adding housing type
town$type <- case_when(
town$dwelling_type %in% c('Private Apartments and Condominiums',
'Landed Properties', 'Others') ~ "Private",
town$dwelling_type %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive') ~ "Public")
town <- subset(T3.5, Description != 'Overall' & Description !='Central Region' &
Description !='East Region' & Description !='North East Region' &
Description !='North Region' & Description !='West Region' &
kwh_per_acc != 's' & dwelling_type != 'Private Housing' &
dwelling_type != 'Public Housing' & month != 'Annual') %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd"))
#Adding housing type
#town$type <- case_when(
#    town$dwelling_type %in% c('Private Apartments and Condominiums',
#                                 'Landed Properties', 'Others') ~ "Private",
#    town$dwelling_type %in% c('1-room / 2-room','3-room','4-room',
#                                  '5-room and Executive') ~ "Public")
#Group by town only
town_final <- town %>%
group_by(date, Description) %>%
summarise(consumption = sum(kwh_per_acc))
View(town_final)
View(dwelling)
dwelling <- T3.4 %>%
filter(year %in% c(2005:2022)) %>%
filter(month %in% c(1:12)) %>%
filter(DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive',
'Private Apartments and Condominiums',
'Landed Properties', 'Others')) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd"))
#Add Private vs Public Classification
dwelling$class <- case_when(
dwelling$DWELLING_TYPE %in% c('Private Apartments and Condominiums',
'Landed Properties', 'Others') ~ "Private",
dwelling$DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive') ~ "Public")
town <- subset(T3.5, Description != 'Overall' & Description !='Central Region' &
Description !='East Region' & Description !='North East Region' &
Description !='North Region' & Description !='West Region' &
kwh_per_acc != 's' & dwelling_type != 'Private Housing' &
dwelling_type != 'Public Housing' & month != 'Annual') %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd"))
#Adding housing type
#town$type <- case_when(
#    town$dwelling_type %in% c('Private Apartments and Condominiums',
#                                 'Landed Properties', 'Others') ~ "Private",
#    town$dwelling_type %in% c('1-room / 2-room','3-room','4-room',
#                                  '5-room and Executive') ~ "Public")
#Group by town only
town_final <- town %>%
group_by(date, Description) %>%
summarise(consumption = sum(kwh_per_acc)/1000)
region <- town %>%
group_by(date, Region) %>%
summarise(consumption = sum(kwh_per_acc)/1000)
dwelling_tog <- dwelling %>%
mutate(type = DWELLING_TYPE) %>%
mutate(consumption = consumption_GWh) %>%
mutate(title = 'Dwelling Type') %>%
select(c('year','month','date','type','consumption','class', 'title'))
town_tog <- town_final %>%
mutate(type = Description) %>%
mutate(title = 'Town') %>%
mutate(year = year(date)) %>%
mutate (month = month(date)) %>%
select(c('year','month','date','type','consumption','title'))
region_tog <- region %>%
mutate(type = Region) %>%
mutate(title = 'Region') %>%
mutate(year = year(date)) %>%
mutate (month = month(date)) %>%
mutate(unit = 'kWh') %>%
select(c('year','month','date','type','consumption','title'))
#choose between dwelling_tog, town_tog, region_tog
chosendata <- town_tog
#choosing the time period
startyear <- 2005
endyear <- 2021
#linechart # backup
ggplot(data = chosendata, aes(x = date)) +
geom_line(aes(y = consumption, colour = type)) +
labs(title = paste0("Electricity Consumption by ",chosendata[1,6]),
x = "Year", y = paste0("Consumption, ",chosendata[1,7])) +
scale_color_discrete(name="") +
theme(legend.position="bottom")
#linechart # backup
ggplot(data = chosendata, aes(x = date)) +
geom_line(aes(y = consumption, colour = type)) +
labs(title = paste0("Electricity Consumption by ",chosendata[1,6]),
x = "Year", y = paste0("Consumption, GWh ")) +
scale_color_discrete(name="") +
theme(legend.position="bottom")
town <- subset(T3.5, Description != 'Overall' & Description !='Central Region' &
Description !='East Region' & Description !='North East Region' &
Description !='North Region' & Description !='West Region' &
kwh_per_acc != 's' & dwelling_type != 'Private Housing' &
dwelling_type != 'Public Housing' & month != 'Annual') %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd"))
#load lib
pacman::p_load(scales, viridis, hrbrthemes, lubridate, gridExtra, knitr, data.table, ggthemes, CGPfunctions, ggHoriPlot, gapminder, gganimate, ggbraid, ggstatsplot, ggiraph, plotly, performance, nortest, patchwork, ggdist, ggridges, reactable, reactablefmtr, gt, gtExtras, tidyverse)
dwelling <- T3.4 %>%
filter(year %in% c(2005:2022)) %>%
filter(month %in% c(1:12)) %>%
filter(DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive',
'Private Apartments and Condominiums',
'Landed Properties', 'Others')) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd"))
#Add Private vs Public Classification
dwelling$class <- case_when(
dwelling$DWELLING_TYPE %in% c('Private Apartments and Condominiums',
'Landed Properties', 'Others') ~ "Private",
dwelling$DWELLING_TYPE %in% c('1-room / 2-room','3-room','4-room',
'5-room and Executive') ~ "Public")
town <- subset(T3.5, Description != 'Overall' & Description !='Central Region' &
Description !='East Region' & Description !='North East Region' &
Description !='North Region' & Description !='West Region' &
kwh_per_acc != 's' & dwelling_type != 'Private Housing' &
dwelling_type != 'Public Housing' & month != 'Annual') %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(date = parse_date_time(paste0(year, "-", month,"-1"),"ymd"))
#Adding housing type
#town$type <- case_when(
#    town$dwelling_type %in% c('Private Apartments and Condominiums',
#                                 'Landed Properties', 'Others') ~ "Private",
#    town$dwelling_type %in% c('1-room / 2-room','3-room','4-room',
#                                  '5-room and Executive') ~ "Public")
#Group by town only
town_final <- town %>%
group_by(date, Description) %>%
summarise(consumption = sum(kwh_per_acc)/1000)
region <- town %>%
group_by(date, Region) %>%
summarise(consumption = sum(kwh_per_acc)/1000)
dwelling_tog <- dwelling %>%
mutate(type = DWELLING_TYPE) %>%
mutate(consumption = consumption_GWh) %>%
mutate(title = 'Dwelling Type') %>%
select(c('year','month','date','type','consumption','class', 'title'))
town_tog <- town_final %>%
mutate(type = Description) %>%
mutate(title = 'Town') %>%
mutate(year = year(date)) %>%
mutate (month = month(date)) %>%
select(c('year','month','date','type','consumption','title'))
region_tog <- region %>%
mutate(type = Region) %>%
mutate(title = 'Region') %>%
mutate(year = year(date)) %>%
mutate (month = month(date)) %>%
mutate(unit = 'kWh') %>%
select(c('year','month','date','type','consumption','title'))
#choose between dwelling_tog, town_tog, region_tog
chosendata <- town_tog
#choosing the time period
startyear <- 2005
endyear <- 2021
#linechart # backup
ggplot(data = chosendata, aes(x = date)) +
geom_line(aes(y = consumption, colour = type)) +
labs(title = paste0("Electricity Consumption by ",chosendata[1,6]),
x = "Year", y = paste0("Consumption, GWh ")) +
scale_color_discrete(name="") +
theme(legend.position="bottom")
# cycleplot
select_type <- 'Ang Mo Kio'
select_cycle <- chosendata %>%
filter(type %in% c(select_type)) %>%
mutate(year = factor(year, levels = 2005:2022),
month = factor(month, levels = 1:12))
#Computing year average by months
hline.data <- select_cycle %>%
group_by(month) %>%
summarise(avg_cons = mean(consumption))
#Plotting cycle plot for electricity consumption per dwelling type
ggplot() +
geom_line(data = select_cycle,
aes(x=year,y=consumption, group=month), colour = "black") +
geom_hline(data = hline.data,
aes(yintercept=avg_cons),
linetype=6,
colour="red",
linewidth=0.5) +
facet_grid(~month) +
theme(axis.text.x = element_text(angle=90, vjust=1, hjust=1)) +
labs(title = paste0("Cycleplot for Chosen ",chosendata[1,6],"'s consumption (GWh) , Jan 2005-Jun 2022"),
subtitle = paste0(chosendata[1,6],": ",select_type)) +
scale_x_discrete(breaks=c("2005","2010","2015","2020")) +
xlab("") +
ylab(paste0("Consumption, ",chosendata[1,7]))
# cycleplot
select_type <- 'Ang Mo Kio'
select_cycle <- chosendata %>%
filter(type %in% c(select_type)) %>%
mutate(year = factor(year, levels = 2005:2022),
month = factor(month, levels = 1:12))
#Computing year average by months
hline.data <- select_cycle %>%
group_by(month) %>%
summarise(avg_cons = mean(consumption))
#Plotting cycle plot for electricity consumption per dwelling type
ggplot() +
geom_line(data = select_cycle,
aes(x=year,y=consumption, group=month), colour = "black") +
geom_hline(data = hline.data,
aes(yintercept=avg_cons),
linetype=6,
colour="red",
linewidth=0.5) +
facet_grid(~month) +
theme(axis.text.x = element_text(angle=90, vjust=1, hjust=1)) +
labs(title = paste0("Cycleplot for Chosen ",chosendata[1,6],"'s consumption (GWh) , Jan 2005-Jun 2022"),
subtitle = paste0(chosendata[1,6],": ",select_type)) +
scale_x_discrete(breaks=c("2005","2010","2015","2020")) +
xlab("") +
ylab("Consumption, GWh")
# cycleplot
select_type <- 'Ang Mo Kio'
select_cycle <- chosendata %>%
filter(type %in% c(select_type)) %>%
mutate(year = factor(year, levels = 2005:2022),
month = factor(month, levels = 1:12))
#Computing year average by months
hline.data <- select_cycle %>%
group_by(month) %>%
summarise(avg_cons = mean(consumption))
#Plotting cycle plot for electricity consumption per dwelling type
ggplot() +
geom_line(data = select_cycle,
aes(x=year,y=consumption, group=month), colour = "black") +
geom_hline(data = hline.data,
aes(yintercept=avg_cons),
linetype=6,
colour="red",
linewidth=0.5) +
facet_grid(~month) +
theme(axis.text.x = element_text(angle=90, vjust=1, hjust=1)) +
labs(title = paste0("Cycleplot for Chosen ",chosendata[1,6],"'s Consumption (GWh) , Jan 2005-Jun 2022"),
subtitle = paste0(chosendata[1,6],": ",select_type)) +
scale_x_discrete(breaks=c("2005","2010","2015","2020")) +
xlab("") +
ylab("Consumption, GWh")
# cycleplot
select_type <- 'Bishan'
select_cycle <- chosendata %>%
filter(type %in% c(select_type)) %>%
mutate(year = factor(year, levels = 2005:2022),
month = factor(month, levels = 1:12))
#Computing year average by months
hline.data <- select_cycle %>%
group_by(month) %>%
summarise(avg_cons = mean(consumption))
#Plotting cycle plot for electricity consumption per dwelling type
ggplot() +
geom_line(data = select_cycle,
aes(x=year,y=consumption, group=month), colour = "black") +
geom_hline(data = hline.data,
aes(yintercept=avg_cons),
linetype=6,
colour="red",
linewidth=0.5) +
facet_grid(~month) +
theme(axis.text.x = element_text(angle=90, vjust=1, hjust=1)) +
labs(title = paste0("Cycleplot for Chosen ",chosendata[1,6],"'s Consumption (GWh) , Jan 2005-Jun 2022"),
subtitle = paste0(chosendata[1,6],": ",select_type)) +
scale_x_discrete(breaks=c("2005","2010","2015","2020")) +
xlab("") +
ylab("Consumption, GWh")
#Display rate of change using Slopegraph
cons_year <- chosendata %>%
group_by(type, year) %>%
summarise(mean_cons=round(mean(consumption),2))
p_slopegraph <- cons_year %>%
mutate(year = factor(year)) %>%
filter(year %in% c(startyear,endyear)) %>%
newggslopegraph(year, mean_cons, type)
p_slopegraph1 <- p_slopegraph + labs(title = "Monthly Electricity Consumption between 2 years",
subtitle = "",
caption = "Source:ema.gov.sg")
p_slopegraph1
#Display rate of change using Slopegraph
cons_year <- chosendata %>%
group_by(type, year) %>%
summarise(mean_cons=round(median(consumption),2))
p_slopegraph <- cons_year %>%
mutate(year = factor(year)) %>%
filter(year %in% c(startyear,endyear)) %>%
newggslopegraph(year, mean_cons, type)
p_slopegraph1 <- p_slopegraph + labs(title = "Monthly Electricity Consumption between 2 years",
subtitle = "",
caption = "Source:ema.gov.sg")
p_slopegraph1
#Display rate of change using Slopegraph
#Give user choice of mean, median, sum, min or max
cons_year <- chosendata %>%
group_by(type, year) %>%
summarise(mean_cons=round(mean(consumption),2))
p_slopegraph <- cons_year %>%
mutate(year = factor(year)) %>%
filter(year %in% c(startyear,endyear)) %>%
newggslopegraph(year, mean_cons, type)
p_slopegraph1 <- p_slopegraph + labs(title = "Monthly Electricity Consumption between 2 years",
subtitle = "",
caption = "Source:ema.gov.sg")
p_slopegraph1
#Display rate of change using Slopegraph
#Give user choice of mean, median, sum, min or max
cons_year <- chosendata %>%
group_by(type, year) %>%
summarise(mean_cons=round(mean(consumption),2))
p_slopegraph <- cons_year %>%
mutate(year = factor(year)) %>%
filter(year %in% c(startyear,endyear)) %>%
newggslopegraph(year, mean_cons, type)
p_slopegraph1 <- p_slopegraph + labs(title = "Monthly Electricity Consumption between 2 years",
subtitle = "",
caption = "Source: ema.gov.sg")
p_slopegraph1
#Display rate of change using Slopegraph
#Give user choice of mean, median, sum, min or max
cons_year <- chosendata %>%
group_by(type, year) %>%
summarise(mean_cons=round(mean(consumption),2))
p_slopegraph <- cons_year %>%
mutate(year = factor(year)) %>%
filter(year %in% c(startyear,endyear)) %>%
newggslopegraph(year, mean_cons, type)
p_slopegraph1 <- p_slopegraph + labs(title = "Average Monthly Electricity Consumption between 2 years",
subtitle = "",
caption = "Source: ema.gov.sg")
p_slopegraph1
library(svglite)
library(svglite)
#Preparing the data for report
d_report <- chosendata %>%
filter(year %in% c(startyear:endyear)) %>%
mutate(`Category`= type) %>%
group_by(`Category`) %>%
summarise("Min" = min(consumption, na.rm = T),
"Max" = max(consumption, na.rm = T),
"Average" = mean(consumption, na.rm = T))
d_sparks <- chosendata %>%
filter(year %in% c(startyear:endyear)) %>%
mutate(`Category`= type) %>%
group_by(`Category`) %>%
summarize(`Monthly Consumption` = list(consumption))
report_data = left_join(d_report, d_sparks)
report_data %>%
gt() %>%
gt_plt_sparkline('Monthly Consumption')
>>>>>>> 0b4d88db8f7e5b2d83c15e7d8261ff878883c7a5
