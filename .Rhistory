#animated bar plot
anim <- ggplot(bar_data, aes(rank, group = DWELLING_TYPE,
fill = as.factor(DWELLING_TYPE), color = as.factor(DWELLING_TYPE))) +
geom_tile(aes(y = consumption_GWh,
height = consumption_GWh,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = consumption_GWh, label = paste(" ",DWELLING_TYPE,"\n",Value_lbl)), hjust = 0, color="black") +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
theme(axis.line=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line(linewidth=.1, color="grey80" ),
panel.grid.minor.x = element_line(linewidth=.1, color="grey80" ),
plot.title=element_text(size=20, hjust=0.5, face="bold", colour="black"),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey"),
plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey"),
plot.background=element_blank(),
plot.margin = margin(2,2, 2, 2, "cm"))
animated <- anim +
transition_states(date, transition_length = 6, state_length = 1) +
view_follow(fixed_y = c(0,500)) +
ease_aes('cubic-in-out') +
labs(title = "Electricity Consumption by Dwelling Type in: {format(frame_time, '%b%y')}",
x = "Consumption (GWh)",
caption="Source:ema.gov.sg")
animate(animated, 500, fps = 10,  width = 800, height = 600,
renderer = gifski_renderer("gganim.gif"))
#animated bar plot
anim <- ggplot(bar_data, aes(rank, group = DWELLING_TYPE,
fill = as.factor(DWELLING_TYPE), color = as.factor(DWELLING_TYPE))) +
geom_tile(aes(y = consumption_GWh,
height = consumption_GWh,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = consumption_GWh, label = paste(" ",DWELLING_TYPE,"\n",Value_lbl)), hjust = 0, color="black") +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
theme(axis.line=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line(linewidth=.1, color="grey80" ),
panel.grid.minor.x = element_line(linewidth=.1, color="grey80" ),
plot.title=element_text(size=20, hjust=0.5, face="bold", colour="black"),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey"),
plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey"),
plot.background=element_blank(),
plot.margin = margin(2,2, 2, 2, "cm"))
animated <- anim +
transition_states(date, transition_length = 6, state_length = 1) +
view_follow(fixed_y = c(0,500)) +
ease_aes('cubic-in-out') +
labs(title = "Electricity Consumption by Dwelling Type in: {closest_state}",
x = "Consumption (GWh)",
caption="Source:ema.gov.sg")
animate(animated, 500, fps = 10,  width = 800, height = 600,
renderer = gifski_renderer("gganim.gif"))
#animated bar plot
anim <- ggplot(bar_data, aes(rank, group = DWELLING_TYPE,
fill = as.factor(DWELLING_TYPE), color = as.factor(DWELLING_TYPE))) +
geom_tile(aes(y = consumption_GWh,
height = consumption_GWh,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = consumption_GWh, label = paste(" ",DWELLING_TYPE,"\n",Value_lbl)), hjust = 0, color="black") +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
theme(axis.line=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line(linewidth=.1, color="grey80" ),
panel.grid.minor.x = element_line(linewidth=.1, color="grey80" ),
plot.title=element_text(size=20, hjust=0.5, face="bold", colour="black"),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey"),
plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey"),
plot.background=element_blank(),
plot.margin = margin(2,2, 2, 2, "cm"))
animated <- anim +
transition_states(date, transition_length = 6, state_length = 1) +
view_follow(fixed_y = c(0,500)) +
ease_aes('cubic-in-out') +
labs(title = "Electricity Consumption by Dwelling Type in: {closest_state}",
x = "Consumption (GWh)",
caption="Source:ema.gov.sg")
animate(animated, 500, fps = 5,  width = 800, height = 600,
renderer = gifski_renderer("gganim.gif"))
#animated bar plot
anim <- ggplot(bar_data, aes(rank, group = DWELLING_TYPE,
fill = as.factor(DWELLING_TYPE), color = as.factor(DWELLING_TYPE))) +
geom_tile(aes(y = consumption_GWh,
height = consumption_GWh,
width = 0.9), alpha = 0.8, color = NA) +
geom_text(aes(y = consumption_GWh, label = paste(" ",DWELLING_TYPE,"\n",Value_lbl)), hjust = 0, color="black") +
coord_flip(clip = "off", expand = FALSE) +
scale_y_continuous(labels = scales::comma) +
scale_x_reverse() +
guides(color = FALSE, fill = FALSE) +
theme(axis.line=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line(linewidth=.1, color="grey80" ),
panel.grid.minor.x = element_line(linewidth=.1, color="grey80" ),
plot.title=element_text(size=20, hjust=0.5, face="bold", colour="black"),
plot.subtitle=element_text(size=18, hjust=0.5, face="italic", color="grey"),
plot.caption =element_text(size=8, hjust=0.5, face="italic", color="grey"),
plot.background=element_blank(),
plot.margin = margin(2,2, 2, 2, "cm"))
animated <- anim +
transition_states(date, transition_length = 6, state_length = 1) +
view_follow(fixed_y = c(0,500)) +
ease_aes('cubic-in-out') +
labs(title = "Electricity Consumption by Dwelling Type in: {closest_state}",
x = "Consumption (GWh)",
caption="Source:ema.gov.sg")
animate(animated, 500, fps = 5,  width = 800, height = 600,
renderer = gifski_renderer("gganim.gif"))
# cycleplot for each dwelling type
select_type <- 'Private Apartments and Condominiums'
select_dwelling <- dwelling %>%
filter(DWELLING_TYPE %in% c(select_type)) %>%
mutate(year = factor(year, levels = 2005:2022),
month = factor(month, levels = 1:12))
#Computing year average by months
hline.data <- select_dwelling %>%
group_by(month) %>%
summarise(avg_cons = mean(consumption_GWh))
#Plotting cycle plot for imports
ggplot() +
geom_line(data = select_dwelling,
aes(x=year,y=consumption_GWh, group=month), colour = "black") +
geom_hline(data = hline.data,
aes(yintercept=avg_cons),
linetype=6,
colour="red",
linewidth=0.5) +
facet_grid(~month) +
theme(axis.text.x = element_text(angle=90, vjust=1, hjust=1)) +
labs(title = "Cycleplot for household electricity consumption (GWh), Jan 2020-Jun 2022",
subtitle = p
aste0('Dwelling Type: ',select_type)) +
# cycleplot for each dwelling type
select_type <- 'Private Apartments and Condominiums'
select_dwelling <- dwelling %>%
filter(DWELLING_TYPE %in% c(select_type)) %>%
mutate(year = factor(year, levels = 2005:2022),
month = factor(month, levels = 1:12))
#Computing year average by months
hline.data <- select_dwelling %>%
group_by(month) %>%
summarise(avg_cons = mean(consumption_GWh))
#Plotting cycle plot for imports
ggplot() +
geom_line(data = select_dwelling,
aes(x=year,y=consumption_GWh, group=month), colour = "black") +
geom_hline(data = hline.data,
aes(yintercept=avg_cons),
linetype=6,
colour="red",
linewidth=0.5) +
facet_grid(~month) +
theme(axis.text.x = element_text(angle=90, vjust=1, hjust=1)) +
labs(title = "Cycleplot for household electricity consumption (GWh), Jan 2020-Jun 2022",
subtitle = paste0('Dwelling Type: ',select_type)) +
xlab("") +
ylab("GWh")
# cycleplot for each dwelling type
select_type <- 'Private Apartments and Condominiums'
select_dwelling <- dwelling %>%
filter(DWELLING_TYPE %in% c(select_type)) %>%
mutate(year = factor(year, levels = 2005:2022),
month = factor(month, levels = 1:12))
#Computing year average by months
hline.data <- select_dwelling %>%
group_by(month) %>%
summarise(avg_cons = mean(consumption_GWh))
#Plotting cycle plot for imports
ggplot() +
geom_line(data = select_dwelling,
aes(x=year,y=consumption_GWh, group=month), colour = "black") +
geom_hline(data = hline.data,
aes(yintercept=avg_cons),
linetype=6,
colour="red",
linewidth=0.5) +
facet_grid(~month) +
theme(axis.text.x = element_text(angle=90, vjust=1, hjust=1)) +
labs(title = "Cycleplot for household electricity consumption (GWh), Jan 2020-Jun 2022",
subtitle = paste0('Dwelling Type: ',select_type)) +
xlab(monthyear) +
ylab("GWh")
# cycleplot for each dwelling type
select_type <- 'Private Apartments and Condominiums'
select_dwelling <- dwelling %>%
filter(DWELLING_TYPE %in% c(select_type)) %>%
mutate(year = factor(year, levels = 2005:2022),
month = factor(month, levels = 1:12))
#Computing year average by months
hline.data <- select_dwelling %>%
group_by(month) %>%
summarise(avg_cons = mean(consumption_GWh))
#Plotting cycle plot for imports
ggplot() +
geom_line(data = select_dwelling,
aes(x=year,y=consumption_GWh, group=month), colour = "black") +
geom_hline(data = hline.data,
aes(yintercept=avg_cons),
linetype=6,
colour="red",
linewidth=0.5) +
facet_grid(~month) +
theme(axis.text.x = element_text(angle=90, vjust=1, hjust=1)) +
labs(title = "Cycleplot for household electricity consumption (GWh), Jan 2020-Jun 2022",
subtitle = paste0('Dwelling Type: ',select_type)) +
xlab(dwelling$monthyear) +
ylab("GWh")
# cycleplot for each dwelling type
select_type <- 'Private Apartments and Condominiums'
select_dwelling <- dwelling %>%
filter(DWELLING_TYPE %in% c(select_type)) %>%
mutate(year = factor(year, levels = 2005:2022),
month = factor(month, levels = 1:12))
#Computing year average by months
hline.data <- select_dwelling %>%
group_by(month) %>%
summarise(avg_cons = mean(consumption_GWh))
#Plotting cycle plot for imports
ggplot() +
geom_line(data = select_dwelling,
aes(x=year,y=consumption_GWh, group=month), colour = "black") +
geom_hline(data = hline.data,
aes(yintercept=avg_cons),
linetype=6,
colour="red",
linewidth=0.5) +
facet_grid(~month) +
theme(axis.text.x = element_text(angle=90, vjust=1, hjust=1)) +
labs(title = "Cycleplot for household electricity consumption (GWh), Jan 2020-Jun 2022",
subtitle = paste0('Dwelling Type: ',select_type)) +
scale_x_discrete(labels=c(dwelling$monthyear)
xlab("") +
# cycleplot for each dwelling type
select_type <- 'Private Apartments and Condominiums'
select_dwelling <- dwelling %>%
filter(DWELLING_TYPE %in% c(select_type)) %>%
mutate(year = factor(year, levels = 2005:2022),
month = factor(month, levels = 1:12))
#Computing year average by months
hline.data <- select_dwelling %>%
group_by(month) %>%
summarise(avg_cons = mean(consumption_GWh))
#Plotting cycle plot for imports
ggplot() +
geom_line(data = select_dwelling,
aes(x=year,y=consumption_GWh, group=month), colour = "black") +
geom_hline(data = hline.data,
aes(yintercept=avg_cons),
linetype=6,
colour="red",
linewidth=0.5) +
facet_grid(~month) +
theme(axis.text.x = element_text(angle=90, vjust=1, hjust=1)) +
labs(title = "Cycleplot for household electricity consumption (GWh), Jan 2020-Jun 2022",
subtitle = paste0('Dwelling Type: ',select_type)) +
scale_x_discrete(labels=c(dwelling$monthyear) +
xlab("") +
ylab("GWh")
# cycleplot for each dwelling type
select_type <- 'Private Apartments and Condominiums'
select_dwelling <- dwelling %>%
filter(DWELLING_TYPE %in% c(select_type)) %>%
mutate(year = factor(year, levels = 2005:2022),
month = factor(month, levels = 1:12))
#Computing year average by months
hline.data <- select_dwelling %>%
group_by(month) %>%
summarise(avg_cons = mean(consumption_GWh))
#Plotting cycle plot for imports
ggplot() +
geom_line(data = select_dwelling,
aes(x=year,y=consumption_GWh, group=month), colour = "black") +
geom_hline(data = hline.data,
aes(yintercept=avg_cons),
linetype=6,
colour="red",
linewidth=0.5) +
facet_grid(~month) +
theme(axis.text.x = element_text(angle=90, vjust=1, hjust=1)) +
labs(title = "Cycleplot for household electricity consumption (GWh), Jan 2020-Jun 2022",
subtitle = paste0('Dwelling Type: ',select_type)) +
scale_x_discrete(labels=c(dwelling$monthyear)) +
xlab("") +
ylab("GWh")
# cycleplot for each dwelling type
select_type <- 'Private Apartments and Condominiums'
select_dwelling <- dwelling %>%
filter(DWELLING_TYPE %in% c(select_type)) %>%
mutate(year = factor(year, levels = 2005:2022),
month = factor(month, levels = 1:12))
#Computing year average by months
hline.data <- select_dwelling %>%
group_by(month) %>%
summarise(avg_cons = mean(consumption_GWh))
#Plotting cycle plot for imports
ggplot() +
geom_line(data = select_dwelling,
aes(x=year,y=consumption_GWh, group=month), colour = "black") +
geom_hline(data = hline.data,
aes(yintercept=avg_cons),
linetype=6,
colour="red",
linewidth=0.5) +
facet_grid(~month) +
theme(axis.text.x = element_text(angle=90, vjust=1, hjust=1)) +
labs(title = "Cycleplot for household electricity consumption (GWh), Jan 2020-Jun 2022",
subtitle = paste0('Dwelling Type: ',select_type)) +
scale_x_discrete(labels=c(dwelling$year)) +
xlab("") +
ylab("GWh")
# cycleplot for each dwelling type
select_type <- 'Private Apartments and Condominiums'
select_dwelling <- dwelling %>%
filter(DWELLING_TYPE %in% c(select_type)) %>%
mutate(year = factor(year, levels = 2005:2022),
month = factor(month, levels = 1:12))
#Computing year average by months
hline.data <- select_dwelling %>%
group_by(month) %>%
summarise(avg_cons = mean(consumption_GWh))
#Plotting cycle plot for imports
ggplot() +
geom_line(data = select_dwelling,
aes(x=year,y=consumption_GWh, group=month), colour = "black") +
geom_hline(data = hline.data,
aes(yintercept=avg_cons),
linetype=6,
colour="red",
linewidth=0.5) +
facet_grid(~month) +
theme(axis.text.x = element_text(angle=90, vjust=1, hjust=1)) +
labs(title = "Cycleplot for household electricity consumption (GWh), Jan 2005-Jun 2022",
subtitle = paste0('Dwelling Type: ',select_type)) +
scale_x_discrete(breaks=c("2005","2010","2015","2020")) +
xlab("") +
ylab("GWh")
#Display rate of change using Slopegraph
#User can choose any 2 years for comparison
startyear <- 2005
endyear <- 2021
cons_yr <- dwelling
cons_year <- cons_yr %>%
group_by(DWELLING_TYPE, year) %>%
summarise(mean_cons=round(mean(consumption_GWh),2))
p_slopegraph <- cons_year %>%
mutate(year = factor(year)) %>%
filter(year %in% c(startyear,endyear)) %>%
newggslopegraph(year, mean_cons, DWELLING_TYPE)
p_slopegraph1 <- p_slopegraph + labs(title = "Monthly Household Electricity Consumption between 2 years",
subtitle = "",
caption = "Source:Singstat.gov.sg")
p_slopegraph1
#Display rate of change using Slopegraph
#User can choose any 2 years for comparison
startyear <- 2005
endyear <- 2021
cons_yr <- dwelling
cons_year <- cons_yr %>%
group_by(DWELLING_TYPE, year) %>%
summarise(mean_cons=round(mean(consumption_GWh),2))
p_slopegraph <- cons_year %>%
mutate(year = factor(year)) %>%
filter(year %in% c(startyear,endyear)) %>%
newggslopegraph(year, mean_cons, DWELLING_TYPE)
p_slopegraph1 <- p_slopegraph + labs(title = "Monthly Household Electricity Consumption between 2 years",
subtitle = "",
caption = "Source:ema.gov.sg")
p_slopegraph1
#linechart
ggplot(data = dwelling, aes(x = date)) +
geom_line(aes(y = dwelling$consumption_GWh, fill = dwelling$DWELLING_TYPE))
#linechart
ggplot(data = dwelling, aes(x = date)) +
geom_line(aes(y = dwelling$consumption_GWh, colour = dwelling$DWELLING_TYPE))
#linechart # backup
ggplot(data = dwelling, aes(x = date)) +
geom_line(aes(y = dwelling$consumption_GWh, colour = dwelling$DWELLING_TYPE)) +
lab(title = "Electricity Consumption by Dwelling Type",
x = ("year"),
y = ("Consumption (GWh)"))
#linechart # backup
ggplot(data = dwelling, aes(x = date)) +
geom_line(aes(y = dwelling$consumption_GWh, colour = dwelling$DWELLING_TYPE)) +
lab(title = "Electricity Consumption by Dwelling Type",
xlab = ("year"),
ylab = ("Consumption (GWh)"))
#linechart # backup
ggplot(data = dwelling, aes(x = date)) +
geom_line(aes(y = dwelling$consumption_GWh, colour = dwelling$DWELLING_TYPE)) +
lab(title = "Electricity Consumption by Dwelling Type",
x = "year",
y = "Consumption (GWh)")
#linechart # backup
ggplot(data = dwelling, aes(x = date)) +
geom_line(aes(y = dwelling$consumption_GWh, colour = dwelling$DWELLING_TYPE)) +
labs(title = "Electricity Consumption by Dwelling Type",
x = "year",
y = "Consumption (GWh)")
#linechart # backup
ggplot(data = dwelling, aes(x = date)) +
geom_line(aes(y = dwelling$consumption_GWh, colour = dwelling$DWELLING_TYPE)) +
labs(title = "Electricity Consumption by Dwelling Type",
x = "Year", y = "Consumption (GWh)") +
theme(legend.position="bottom", legend.title = "")
#linechart # backup
ggplot(data = dwelling, aes(x = date)) +
geom_line(aes(y = dwelling$consumption_GWh, colour = dwelling$DWELLING_TYPE)) +
labs(title = "Electricity Consumption by Dwelling Type",
x = "Year", y = "Consumption (GWh)") +
theme(legend.position="bottom")
#linechart # backup
ggplot(data = dwelling, aes(x = date)) +
geom_line(aes(y = consumption_GWh, colour = DWELLING_TYPE)) +
labs(title = "Electricity Consumption by Dwelling Type",
x = "Year", y = "Consumption (GWh)") +
theme(legend.position="bottom")
#linechart # backup
ggplot(data = dwelling, aes(x = date)) +
geom_line(aes(y = consumption_GWh, colour = DWELLING_TYPE)) +
labs(title = "Electricity Consumption by Dwelling Type",
x = "Year", y = "Consumption (GWh)") +
scale_color_discrete(name="")
theme(legend.position="bottom")
#linechart # backup
ggplot(data = dwelling, aes(x = date)) +
geom_line(aes(y = consumption_GWh, colour = DWELLING_TYPE)) +
labs(title = "Electricity Consumption by Dwelling Type",
x = "Year", y = "Consumption (GWh)") +
scale_color_discrete(name="") +
theme(legend.position="bottom")
View(T3.5)
town <- T3.5[!(row.names(T3.5$Region) %in% c("Overall"))]
town <- subset(T3.5, Region != 'Overall')
View(town)
town <- subset(T3.5, Region != 'Overall'|'Central Region'|'East Region'|'North East Region'|'North Region'|'West Region')
town <- subset(T3.5, Region != 'Overall' &
Region !='Central Region'&
Region !='East Region'&
Region !='North East Region'&
Region !='North Region'&
Region !='West Region')
town <- subset(T3.5, Description != 'Overall' &
Description !='Central Region'&
Description !='East Region'&
Description !='North East Region'&
Description !='North Region'| 'West Region')
town <- subset(T3.5, Description != 'Overall' &
Description !='Central Region'&
Description !='East Region'&
Description !='North East Region'&
Description !='North Region'&
Description !='West Region')
## Read compressed data file
T2.3 <- readRDS(file = "RDS/T2-3.rds") # Peak System Demand
#T2.6 <- readRDS(file = "RDS/T2-6.rds") # Market Share of Electricity Generation
T3.4 <- readRDS(file = "RDS/T3-4.rds") # Total Household Electricity Consumption by Dwelling Type
T3.5 <- readRDS(file = "RDS/T3-5.rds") # Average Monthly Household Electricity Consumption by Planning Area & Dwelling Type
#T3.6 <- readRDS(file = "RDS/T3-6.rds") # Market Share for Natural Gas Retail
#T3.7 <- readRDS(file = "RDS/T3-7.rds") # Natural Gas Consumption by Sub-Sector
#T3.8 <- readRDS(file = "RDS/T3-8.rds") # Total Household Town Gas Consumption by Dwelling Type
#T3.9 <- readRDS(file = "RDS/T3-9.rds") # Average Monthly Household Town Gas Consumption by Planning Area & Dwelling Type
#T5.1 <- readRDS(file = "RDS/T5-1.rds") # Electricity and Gas Tariffs
#T5.2 <- readRDS(file = "RDS/T5-2.rds") # Monthly Electricity Tariffs (Low Tension Tariffs)
#T5.3 <- readRDS(file = "RDS/T5-3.rds") # Annual Electricity Tariffs by Components (Low Tension Tariffs)
#T5.4 <- readRDS(file = "RDS/T5-4.rds") # Average Monthly Uniform Singapore Energy Prices (USEP)
#T5.5 <- readRDS(file = "RDS/T5-5.rds") # Monthly Town Gas Tariffs
town <- subset(T3.5, Description != 'Overall' &
Description !='Central Region'&
Description !='East Region'&
Description !='North East Region'&
Description !='North Region'&
Description !='West Region')
