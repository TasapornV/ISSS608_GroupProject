# labs(title = "Singapore Resale flat price trends") +
# scale_y_continuous(breaks = c(250000, 500000, 750000, 1000000, 1250000)) +
theme(plot.title = element_text(size=22),
axis.text.x = element_text(size = 10, angle = 45),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 10),
legend.position = "top")
# call library used
library(shiny)
library(shinythemes)
library(geofacet)
# Import data
geofacet <- T3.5
# Import the area grid data.
area_grid <- read_csv("data/areagrid.csv")
geofacet <- geofacet %>%
group_by(year, dwelling_type) %>%
summarise(avgprice = mean(kwh_per_acc, na.rm = TRUE),
medprice = median(kwh_per_acc, na.rm = TRUE))%>%
ungroup()
# call library used
library(shiny)
library(shinythemes)
library(geofacet)
# Import data
geofacet <- T3.5
# Import the area grid data.
area_grid <- read_csv("data/areagrid.csv")
geofacet <- geofacet %>%
group_by(year, dwelling_type) %>%
summarise(avgprice = mean(kwh_per_acc, na.rm = TRUE),
medprice = median(kwh_per_acc, na.rm = TRUE))%>%
ungroup()
# call library used
library(shiny)
library(shinythemes)
library(geofacet)
# Import data
geofacet1 <- T3.5
# Import the area grid data.
area_grid <- read_csv("data/areagrid.csv")
geofacet1 <- geofacet1 %>%
group_by(year, dwelling_type) %>%
summarise(avgprice = mean(kwh_per_acc, na.rm = TRUE),
medprice = median(kwh_per_acc, na.rm = TRUE))%>%
ungroup()
# call library used
library(shiny)
library(shinythemes)
library(geofacet)
# Import data
geofacet <- T3.5
geofacet$kwh_per_acc <- as.numeric(geofacet$kwh_per_acc)
# Import the area grid data.
area_grid <- read_csv("data/areagrid.csv")
geofacet <- geofacet %>%
group_by(year, dwelling_type) %>%
summarise(avgprice = mean(kwh_per_acc, na.rm = TRUE),
medprice = median(kwh_per_acc, na.rm = TRUE))%>%
ungroup()
# merge table with town name
geofacet_gas_consump <- inner_join(geofacet, area_grid,
by = c("Description" = "name"))
# call library used
library(shiny)
library(shinythemes)
library(geofacet)
# Import data
geofacet <- T3.5
geofacet$kwh_per_acc <- as.numeric(geofacet$kwh_per_acc)
# Import the area grid data.
area_grid <- read_csv("data/areagrid.csv")
geofacet <- geofacet %>%
group_by(year, dwelling_type) %>%
summarise(avgprice = mean(kwh_per_acc, na.rm = TRUE),
medprice = median(kwh_per_acc, na.rm = TRUE))%>%
ungroup()
# merge table with town name
#geofacet_gas_consump <- inner_join(geofacet, area_grid,
#                      by = c("Description" = "name"))
#common_grid <- area_grid[area_grid$name %in% unique(geofacet$Description),]
#ggplot(geofacet_gas_consump, aes(x = year, y = avgprice)) +
#  geom_line(aes(color = as.factor(dwelling_type))) +
#  scale_x_date(date_labels = "%b") +
#  facet_geo(~ Description, grid = common_grid) +
#  labs(title = "Singapore Resale flat price trends") +
#  scale_y_continuous(breaks = c(250000, 500000, 750000, 1000000, 1250000)) +
#  theme(plot.title = element_text(size=22),
#        axis.text.x = element_text(size = 10, angle = 45),
#        axis.text.y = element_text(size = 10),
#        strip.text = element_text(size = 10),
#        legend.position = "top")
#ui = fluidPage(
#  theme = shinytheme("slate"),
#  headerPanel(title = "Singapore Energy Consumption"),
#
#   navlistPanel(
#     widths = c(3, 9),
#
#     tabPanel("OVERVIEW",tabName = "overview",icon = icon("chalkboard-user"),
#              navbarPage("OVERVIEW",
#                         tabPanel("Introduction"),
#                         tabPanel("Boxplot"),
#                         tabPanel("Geofacet"),
#                         tabPanel("Lineplot"),
#                         tabPanel("Barchart")
#              )
#     ),
#
#     # ========================== CLUSTERING ========================== #
#
#     tabPanel("CLUSTERING", tabName = "clustering", icon = icon("circle-nodes"),
#              navbarPage("CLUSTERING",
#                         tabPanel("Hierachical Clustering"),
#                         tabPanel("DTW"),
#                         tabPanel("Time Series Clustering")
#              )
#     ),
#     # ========================== INFERENTIAL ========================== #
#
#     tabPanel("INFERENTIAL STATISTICS", tabName = "inferential", icon = icon("magnifying-glass-chart"),
#              navbarPage("INFERENTIAL STATISTICS",
#                         tabPanel("ANOVA"),
#                         tabPanel("Correlation Analysis")
#              )
#     ),
#     # ========================== TIME SERIES ========================== #
#
#     tabPanel("TIME SERIES FORECASTING", tabName = "time_series", icon = icon("chart-line"),
#              navbarPage("TIME SERIES FORECASTING",
#                         tabPanel("Trend Prediction"),
#                         tabPanel("Slope Graph")
#              )
#     ),
#
#     # =============================== DATA =============================== #
#
#     tabPanel("DATA", tabName = "data", icon = icon("table"),
#              navbarPage("DATA" )),
#     # =============================== ABOUT =============================== #
#
#     tabPanel("ABOUT", tabName = "about", icon = icon("info")),
#     # ============================== CO.MMON USER INPUT =============================== #
#     tabPanel(wellPanel(
#       sliderInput("slider_time", "Select date range",min = as.Date("2021-02-24"),
#                   max = as.Date("2021-04-24"),
#                   value =  c(as.Date("2021-02-24"),as.Date("2021-03-03") )),
#
#       dateRangeInput("daterange", "Input date range",
#                      start = as.Date("2021-02-24"),end = as.Date("2021-03-03") )
#     ))
#   )
# )
#
# server = function(input, output, session) {
#
# }
#
# shinyApp(ui , server )
library(shiny)
library(shinythemes)
## Set up parameter
tables <- c("Peak System Demand" = "T2.3",
"Market Share of Electricity Generation" = "T2.6",
"Total Household Electricity Consumption by Dwelling Type" = "T3.4",
"Average Monthly Household Electricity Consumption by Planning Area & Dwelling Type" = "T3.5",
"Market Share for Natural Gas Retail" = "T3.6",
"Natural Gas Consumption by Sub-Sector" = "T3.7",
"Total Household Town Gas Consumption by Dwelling Type" = "T3.8",
"Average Monthly Household Town Gas Consumption by Planning Area & Dwelling Type" = "T3.9",
"Electricity and Gas Tariffs" = "T5.1",
"Monthly Electricity Tariffs (Low Tension Tariffs)" = "T5.2",
"Annual Electricity Tariffs by Components (Low Tension Tariffs)" = "T5.3",
"Average Monthly Uniform Singapore Energy Prices (USEP)" = "T5.4",
"Monthly Town Gas Tariffs" = "T5.5")
ui = fluidPage(
theme = shinytheme("slate"),
headerPanel(title = "Singapore Energy Consumption"),
navlistPanel(
widths = c(3, 9),
# ========================== OVERVIEW ========================== #
tabPanel("OVERVIEW",tabName = "overview",icon = icon("chalkboard-user")),
# ========================== CLUSTERING ========================== #
tabPanel("CLUSTERING", tabName = "clustering", icon = icon("circle-nodes")),
# ========================== INFERENTIAL ========================== #
tabPanel("INFERENTIAL STATISTICS", tabName = "inferential", icon = icon("magnifying-glass-chart")),
# ========================== TIME SERIES ========================== #
tabPanel("TIME SERIES FORECASTING", tabName = "time_series", icon = icon("chart-line")),
# =============================== DATA =============================== #
tabPanel("DATA", tabName = "data", icon = icon("table"),
navbarPage("DATA",
tabPanel("data table",
fluidPage(
fluidRow(
column(12, wellPanel(
radioButtons("SelectTable",
label = "Select Data",
choices = tables,
selected = "Electricity")
) ),
column(12, dataTableOutput("table"))
)
))
)
),
# ******************************* END DATA ******************************* #
# =============================== ABOUT =============================== #
tabPanel("ABOUT", tabName = "about", icon = icon("info")),
# ****************************** END ABOUT ****************************** #
tabPanel(wellPanel(
sliderInput("slider_time", "Select date range",min = as.Date("2021-02-24"),
max = as.Date("2021-04-24"),
value =  c(as.Date("2021-02-24"),as.Date("2021-03-03") )),
dateRangeInput("daterange", "Input date range",
start = as.Date("2021-02-24"),end = as.Date("2021-03-03") )
))
)
)
server = function(input, output, session) {
observeEvent((input$SelectTable),{
if(input$SelectTable == "T2.3") {tabletext <- T2.3}
if(input$SelectTable == "T2.6")  {tabletext <- T2.6}
if(input$SelectTable == "T3.4")  {tabletext <- T3.4}
if(input$SelectTable == "T3.5")  {tabletext <- T3.5}
if(input$SelectTable == "T3.6")  {tabletext <- T3.6}
if(input$SelectTable == "T3.7")  {tabletext <- T3.7}
if(input$SelectTable == "T3.8")  {tabletext <- T3.8}
if(input$SelectTable == "T3.9")  {tabletext <- T3.9}
if(input$SelectTable == "T5.1")  {tabletext <- T5.1}
if(input$SelectTable == "T5.2")  {tabletext <- T5.2}
if(input$SelectTable == "T5.3")  {tabletext <- T5.3}
if(input$SelectTable == "T5.4")  {tabletext <- T5.4}
if(input$SelectTable == "T5.5")  {tabletext <- T5.5}
output$table <- renderDataTable(tabletext)
}
)
}
shinyApp(ui = ui, server = server)
runApp('Shiny_App_G9')
runApp('Shiny_App_G9')
runApp('Shiny_App_G9')
runApp('Shiny_App_G9')
runApp('Shiny_App_G9')
runApp('Shiny_App_G9')
runApp('Shiny_App_G9')
ggplotly(
consumption %>%
group_by(date) %>%
summarise(avg=mean(kwh_per_acc)) %>%
ggplot(aes(x = date, y = avg)) +
geom_line() +
theme_minimal() +
theme(legend.position = "top") +
labs(title = "Average consumption per year by Region", y="kwh per acc"))
consumption <- T3.5
consumption <- consumption %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(year = as.character(year)) %>%
mutate('date' = make_date(year=year, month=month,day=1))
ggplotly(
consumption %>%
group_by(date) %>%
summarise(avg=mean(kwh_per_acc)) %>%
ggplot(aes(x = date, y = avg)) +
geom_line() +
theme_minimal() +
theme(legend.position = "top") +
labs(title = "Average consumption per year by Region", y="kwh per acc"))
consumption <- T3.5
consumption <- consumption %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(year = as.character(year)) %>%
mutate('date' = make_date(year=year, month=month,day=1))
consumption %>%
group_by(date) %>%
summarise(avg=mean(kwh_per_acc))
consumption
# ggplotly(
#   consumption %>%
#     group_by(date) %>%
#     summarise(avg=mean(kwh_per_acc))
#   %>%
#     ggplot(aes(x = date, y = avg)) +
#     geom_line() +
#     theme_minimal() +
#     theme(legend.position = "top") +
#     labs(title = "Average consumption per year by Region", y="kwh per acc"))
consumption <- T3.5
consumption <- consumption %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(year = as.character(year)) %>%
mutate('date' = make_date(year=year, month=month,day=na))
consumption <- T3.5
consumption <- consumption %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(year = as.character(year)) %>%
mutate('date' = make_date(year=year, month=month,day="na"))
consumption %>%
group_by(date) %>%
summarise(avg=mean(kwh_per_acc))
consumption
# ggplotly(
#   consumption %>%
#     group_by(date) %>%
#     summarise(avg=mean(kwh_per_acc))
#   %>%
#     ggplot(aes(x = date, y = avg)) +
#     geom_line() +
#     theme_minimal() +
#     theme(legend.position = "top") +
#     labs(title = "Average consumption per year by Region", y="kwh per acc"))
consumption <- T3.5
consumption <- consumption %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(year = as.character(year)) %>%
mutate('date' = make_date(year=year, month=month))
consumption %>%
group_by(date) %>%
summarise(avg=mean(kwh_per_acc))
consumption
# ggplotly(
#   consumption %>%
#     group_by(date) %>%
#     summarise(avg=mean(kwh_per_acc))
#   %>%
#     ggplot(aes(x = date, y = avg)) +
#     geom_line() +
#     theme_minimal() +
#     theme(legend.position = "top") +
#     labs(title = "Average consumption per year by Region", y="kwh per acc"))
consumption <- T3.5
consumption <- consumption %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(year = as.character(year)) %>%
mutate('date' = make_date(year=year, month=month))
consumption %>%
group_by(date) %>%
summarise(avg=mean(kwh_per_acc))
consumption
# plot_ly(date=consumption,
#         type="line",
#         x=~date,
#         y=~avg
#     ggplot(aes(x = date, y = avg)) +
#     geom_line() +
#     theme_minimal() +
#     theme(legend.position = "top") +
#     labs(title = "Average consumption per year by Region", y="kwh per acc"))
consumption <- T3.5
consumption <- consumption %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(year = as.character(year)) %>%
mutate('date' = make_date(year=year, month=month))
consumption %>%
group_by(date) %>%
summarise(sum=mean(kwh_per_acc))
consumption
# plot_ly(date=consumption,
#         type="line",
#         x=~date,
#         y=~avg
#     ggplot(aes(x = date, y = avg)) +
#     geom_line() +
#     theme_minimal() +
#     theme(legend.position = "top") +
#     labs(title = "Average consumption per year by Region", y="kwh per acc"))
consumption <- T3.5
consumption <- consumption %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(year = as.character(year)) %>%
mutate('date' = make_date(year=year, month=month))
consumption %>%
group_by(date)
consumption
# plot_ly(date=consumption,
#         type="line",
#         x=~date,
#         y=~avg
#     ggplot(aes(x = date, y = avg)) +
#     geom_line() +
#     theme_minimal() +
#     theme(legend.position = "top") +
#     labs(title = "Average consumption per year by Region", y="kwh per acc"))
consumption <- T3.5
consumption <- consumption %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(year = as.character(year)) %>%
mutate('date' = make_date(year=year, month=month))
consumption %>%
group_by(date) %>%
summarise(avg = mean(kwh_per_acc))
consumption
# plot_ly(date=consumption,
#         type="line",
#         x=~date,
#         y=~avg
#     ggplot(aes(x = date, y = avg)) +
#     geom_line() +
#     theme_minimal() +
#     theme(legend.position = "top") +
#     labs(title = "Average consumption per year by Region", y="kwh per acc"))
consumption <- T3.5
consumption <- consumption %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(year = as.character(year)) %>%
mutate('date' = make_date(year=year, month=month))
consumption %>%
group_by(date) %>%
summarise(avg = mean(kwh_per_acc, na.rm = TRUE))
consumption
# plot_ly(date=consumption,
#         type="line",
#         x=~date,
#         y=~avg
#     ggplot(aes(x = date, y = avg)) +
#     geom_line() +
#     theme_minimal() +
#     theme(legend.position = "top") +
#     labs(title = "Average consumption per year by Region", y="kwh per acc"))
consumption <- T3.5
consumption <- consumption %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(year = as.character(year)) %>%
mutate('date' = make_date(year=year, month=month))
consumption %>%
group_by(date) %>%
summarise(avg = mean(kwh_per_acc, na.rm = TRUE))
plot_ly(date=consumption,
type="line",
x=~date,
y=~avg,
mode="markers")
consumption <- T3.5
consumption <- consumption %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(year = as.character(year)) %>%
mutate('date' = make_date(year=year, month=month))
consumption %>%
group_by(date) %>%
summarise(avg = mean(kwh_per_acc, na.rm = TRUE))
plot_ly(data=consumption,
type="line",
x=~date,
y=~avg,
mode="markers")
consumption <- T3.5
consumption <- consumption %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(year = as.character(year)) %>%
mutate('date' = make_date(year=year, month=month))
consumption %>%
group_by(date) %>%
summarise(avg = mean(kwh_per_acc, na.rm = TRUE))
plot_ly(data=consumption,
type="line",
x=date,
y=avg,
mode="markers")
consumption <- T3.5
consumption <- consumption %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(year = as.character(year)) %>%
mutate('date' = make_date(year=year, month=month))
consumption %>%
group_by(date) %>%
summarise(avg = mean(kwh_per_acc, na.rm = TRUE))
ggplot(consumption) +
geom_line(aes(x=date,y=avg))
consumption <- T3.5
consumption <- consumption %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(year = as.character(year)) %>%
mutate('date' = make_date(year=year, month=month))
consumption %>%
group_by(date) %>%
summarise(avg = mean(kwh_per_acc, na.rm = TRUE)) %>%
plot_ly(
type="line",
x=~date,
y=~avg,
mode="markers")
consumption <- T3.5
consumption <- consumption %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(year = as.character(year)) %>%
mutate('date' = make_date(year=year, month=month))
consumption %>%
group_by(date) %>%
summarise(avg = mean(kwh_per_acc, na.rm = TRUE)) %>%
plot_ly(
type="scatter",
x=~date,
y=~avg,
mode="markers")
consumption <- T3.5
consumption <- consumption %>%
mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>%
mutate(year = as.character(year)) %>%
mutate('date' = make_date(year=year, month=month))
consumption %>%
group_by(date) %>%
summarise(avg = mean(kwh_per_acc, na.rm = TRUE)) %>%
plot_ly(
type="scatter",
x=~date,
y=~avg,
mode="lines")
runApp('Shiny_App_G9')
runApp('Shiny_App_G9')
runApp('Shiny_App_G9')
runApp('Shiny_App_G9')
runApp('Shiny_App_G9')
