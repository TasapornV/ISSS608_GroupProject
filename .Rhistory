.date_var=Date,
.value=value,
.color_var=Description,
.facet_var=cluster_group,
.facet_ncol=2,
.facet_scales = "free_y",
.smooth=FALSE,
.line_size = 0.3,
.plotly_slider = TRUE,
.title = "Time Series Plot by cluster")
ts <- ts %>%
layout(hovermode="compare")
ts
library(ggplot2)
library(ggiraph)
library(timetk)
# add the cluster number
dtw_cluster <- clus_group1 %>%
left_join(hclus_dtw, by=c("Description" = "type_col"))
# change date columns into rows
dtw_cluster_t <- dtw_cluster %>%
mutate_at(vars(contains("202")),as.numeric) %>%
gather(Date, value, 2:55)
# convert Date into date format
dtw_cluster_t$Date <- parse_date_time(dtw_cluster_t$Date, orders=c("%Y-%m-%d"))
# plot time series by cluster
ts <- plot_time_series(.data=dtw_cluster_t,
.date_var=Date,
.value=value,
.color_var=Description,
.facet_var=cluster_group,
.facet_ncol=2,
.facet_scales = "free_y",
.smooth=FALSE,
.line_size = 0.3,
.plotly_slider = TRUE,
.title = "Time Series Plot by cluster")
ts <- ts %>%
layout(hovermode="x")
ts
library(ggplot2)
library(ggiraph)
library(timetk)
# add the cluster number
dtw_cluster <- clus_group1 %>%
left_join(hclus_dtw, by=c("Description" = "type_col"))
# change date columns into rows
dtw_cluster_t <- dtw_cluster %>%
mutate_at(vars(contains("202")),as.numeric) %>%
gather(Date, value, 2:55)
# convert Date into date format
dtw_cluster_t$Date <- parse_date_time(dtw_cluster_t$Date, orders=c("%Y-%m-%d"))
# plot time series by cluster
ts <- plot_time_series(.data=dtw_cluster_t,
.date_var=Date,
.value=value,
.color_var=Description,
.facet_var=cluster_group,
.facet_ncol=2,
.facet_scales = "free_y",
.smooth=FALSE,
.line_size = 0.3,
.plotly_slider = TRUE,
.title = "Time Series Plot by cluster")
ts <- ts %>%
layout(hovermode="closest")
ts
library(ggplot2)
library(ggiraph)
library(timetk)
# add the cluster number
dtw_cluster <- clus_group1 %>%
left_join(hclus_dtw, by=c("Description" = "type_col"))
# change date columns into rows
dtw_cluster_t <- dtw_cluster %>%
mutate_at(vars(contains("202")),as.numeric) %>%
gather(Date, value, 2:55)
# Add the word "Cluster"
dtw_cluster_t$cluster_group <- paste("Cluster", dtw_cluster_t$cluster_group)
# convert Date into date format
dtw_cluster_t$Date <- parse_date_time(dtw_cluster_t$Date, orders=c("%Y-%m-%d"))
# plot time series by cluster
ts <- plot_time_series(.data=dtw_cluster_t,
.date_var=Date,
.value=value,
.color_var=Description,
.facet_var=cluster_group,
.facet_ncol=2,
.facet_scales = "free_y",
.smooth=FALSE,
.line_size = 0.3,
.plotly_slider = TRUE,
.title = "Time Series Plot by cluster")
ts <- ts %>%
layout(hovermode="x")
ts
library(ggplot2)
library(ggiraph)
library(timetk)
# add the cluster number
dtw_cluster <- clus_group1 %>%
left_join(hclus_dtw, by=c("Description" = "type_col"))
# change date columns into rows
dtw_cluster_t <- dtw_cluster %>%
mutate_at(vars(contains("202")),as.numeric) %>%
gather(Date, value, 2:55)
# Add the word "Cluster"
dtw_cluster_t$cluster_group <- paste("Cluster", dtw_cluster_t$cluster_group)
# convert Date into date format
dtw_cluster_t$Date <- parse_date_time(dtw_cluster_t$Date, orders=c("%Y-%m-%d"))
# plot time series by cluster
ts <- plot_time_series(.data=dtw_cluster_t,
.date_var=Date,
.value=value,
.color_var=Description,
.facet_var=cluster_group,
.facet_ncol=2,
.facet_scales = "free_y",
.smooth=FALSE,
.line_size = 0.3,
.plotly_slider = TRUE,
.title = "Time Series Plot by cluster")
ts <- ts %>%
layout(hovermode="x",
hoverlabel(font=5))
library(ggplot2)
library(ggiraph)
library(timetk)
# add the cluster number
dtw_cluster <- clus_group1 %>%
left_join(hclus_dtw, by=c("Description" = "type_col"))
# change date columns into rows
dtw_cluster_t <- dtw_cluster %>%
mutate_at(vars(contains("202")),as.numeric) %>%
gather(Date, value, 2:55)
# Add the word "Cluster"
dtw_cluster_t$cluster_group <- paste("Cluster", dtw_cluster_t$cluster_group)
# convert Date into date format
dtw_cluster_t$Date <- parse_date_time(dtw_cluster_t$Date, orders=c("%Y-%m-%d"))
# plot time series by cluster
ts <- plot_time_series(.data=dtw_cluster_t,
.date_var=Date,
.value=value,
.color_var=Description,
.facet_var=cluster_group,
.facet_ncol=2,
.facet_scales = "free_y",
.smooth=FALSE,
.line_size = 0.3,
.plotly_slider = TRUE,
.title = "Time Series Plot by cluster")
ts <- ts %>%
layout(hovermode="x",
hoverlabel.font=5)
ts
library(ggplot2)
library(ggiraph)
library(timetk)
# add the cluster number
dtw_cluster <- clus_group1 %>%
left_join(hclus_dtw, by=c("Description" = "type_col"))
# change date columns into rows
dtw_cluster_t <- dtw_cluster %>%
mutate_at(vars(contains("202")),as.numeric) %>%
gather(Date, value, 2:55)
# Add the word "Cluster"
dtw_cluster_t$cluster_group <- paste("Cluster", dtw_cluster_t$cluster_group)
# convert Date into date format
dtw_cluster_t$Date <- parse_date_time(dtw_cluster_t$Date, orders=c("%Y-%m-%d"))
# plot time series by cluster
ts <- plot_time_series(.data=dtw_cluster_t,
.date_var=Date,
.value=value,
.color_var=Description,
.facet_var=cluster_group,
.facet_ncol=2,
.facet_scales = "free_y",
.smooth=FALSE,
.line_size = 0.3,
.plotly_slider = TRUE,
.title = "Time Series Plot by cluster")
ts <- ts %>%
layout(hovermode="x",
hoverlabel=list(font=list(size=5)))
ts
library(ggplot2)
library(ggiraph)
library(timetk)
# add the cluster number
dtw_cluster <- clus_group1 %>%
left_join(hclus_dtw, by=c("Description" = "type_col"))
# change date columns into rows
dtw_cluster_t <- dtw_cluster %>%
mutate_at(vars(contains("202")),as.numeric) %>%
gather(Date, value, 2:55)
# Add the word "Cluster"
dtw_cluster_t$cluster_group <- paste("Cluster", dtw_cluster_t$cluster_group)
# convert Date into date format
dtw_cluster_t$Date <- parse_date_time(dtw_cluster_t$Date, orders=c("%Y-%m-%d"))
# plot time series by cluster
ts <- plot_time_series(.data=dtw_cluster_t,
.date_var=Date,
.value=value,
.color_var=Description,
.facet_var=cluster_group,
.facet_ncol=2,
.facet_scales = "free_y",
.smooth=FALSE,
.line_size = 0.3,
.plotly_slider = TRUE,
.title = "Time Series Plot by cluster")
ts <- ts %>%
layout(hovermode="x",
hoverlabel=list(font=list(size=7)))
ts
library(ggplot2)
library(ggiraph)
library(timetk)
# add the cluster number
dtw_cluster <- clus_group1 %>%
left_join(hclus_dtw, by=c("Description" = "type_col"))
# change date columns into rows
dtw_cluster_t <- dtw_cluster %>%
mutate_at(vars(contains("202")),as.numeric) %>%
gather(Date, value, 2:55)
# Add the word "Cluster"
dtw_cluster_t$cluster_group <- paste("Cluster", dtw_cluster_t$cluster_group)
# convert Date into date format
dtw_cluster_t$Date <- parse_date_time(dtw_cluster_t$Date, orders=c("%Y-%m-%d"))
# plot time series by cluster
ts <- plot_time_series(.data=dtw_cluster_t,
.date_var=Date,
.value=value,
.color_var=Description,
.facet_var=cluster_group,
.facet_ncol=2,
.facet_scales = "free_y",
.smooth=FALSE,
.line_size = 0.3,
.plotly_slider = TRUE,
.title = "Time Series Plot by cluster",
.text=paste(Date, Description, value))
library(ggplot2)
library(ggiraph)
library(timetk)
# add the cluster number
dtw_cluster <- clus_group1 %>%
left_join(hclus_dtw, by=c("Description" = "type_col"))
# change date columns into rows
dtw_cluster_t <- dtw_cluster %>%
mutate_at(vars(contains("202")),as.numeric) %>%
gather(Date, value, 2:55)
# Add the word "Cluster"
dtw_cluster_t$cluster_group <- paste("Cluster", dtw_cluster_t$cluster_group)
# convert Date into date format
dtw_cluster_t$Date <- parse_date_time(dtw_cluster_t$Date, orders=c("%Y-%m-%d"))
# plot time series by cluster
ts <- plot_time_series(.data=dtw_cluster_t,
.date_var=Date,
.value=value,
.color_var=Description,
.facet_var=cluster_group,
.facet_ncol=2,
.facet_scales = "free_y",
.smooth=FALSE,
.line_size = 0.3,
.plotly_slider = TRUE,
.title = "Time Series Plot by cluster",
text=paste(Date, Description, value))
library(ggplot2)
library(ggiraph)
library(timetk)
# add the cluster number
dtw_cluster <- clus_group1 %>%
left_join(hclus_dtw, by=c("Description" = "type_col"))
# change date columns into rows
dtw_cluster_t <- dtw_cluster %>%
mutate_at(vars(contains("202")),as.numeric) %>%
gather(Date, value, 2:55)
# Add the word "Cluster"
dtw_cluster_t$cluster_group <- paste("Cluster", dtw_cluster_t$cluster_group)
# convert Date into date format
dtw_cluster_t$Date <- parse_date_time(dtw_cluster_t$Date, orders=c("%Y-%m-%d"))
# plot time series by cluster
ts <- plot_time_series(.data=dtw_cluster_t,
.date_var=Date,
.value=value,
.color_var=Description,
.facet_var=cluster_group,
.facet_ncol=2,
.facet_scales = "free_y",
.smooth=FALSE,
.line_size = 0.3,
.plotly_slider = TRUE,
.title = "Time Series Plot by cluster")
ts <- ts %>%
layout(hovermode="x",
hoverlabel=list(font=list(size=7)))
ts
library(dtwclust)
library(tibble)
library(ggdendro)
# Parameter 1: Clustering Method (type) ("partitional", "hierarchical", "tadpole", "fuzzy".)
# parameter 2: Number of cluster (k)
# parameter 3: Distance function (distance) (dtw, )
cluster_dtw <- tsclust(clus_matrix1[,-c(1)],
type = "h",
k=2,
distance="Jaccard",
control = hierarchical_control(method = "complete"),
preproc = NULL,
args=tsclust_args(dist = list(window.size = 5L)))
library(dtwclust)
library(tibble)
library(ggdendro)
# Parameter 1: Clustering Method (type) ("partitional", "hierarchical", "tadpole", "fuzzy".)
# parameter 2: Number of cluster (k)
# parameter 3: Distance function (distance) (dtw, )
cluster_dtw <- tsclust(clus_matrix1[,-c(1)],
type = "h",
k=2,
distance="jaccard",
control = hierarchical_control(method = "complete"),
preproc = NULL,
args=tsclust_args(dist = list(window.size = 5L)))
library(dtwclust)
library(tibble)
library(ggdendro)
# Parameter 1: Clustering Method (type) ("partitional", "hierarchical", "tadpole", "fuzzy".)
# parameter 2: Number of cluster (k)
# parameter 3: Distance function (distance) (dtw, )
cluster_dtw <- tsclust(clus_matrix1[,-c(1)],
type = "h",
k=2,
distance="dtw",
control = hierarchical_control(method = "complete"),
preproc = NULL,
args=tsclust_args(dist = list(window.size = 5L)))
hclus_dtw <- cutree(cluster_dtw, k=4) %>%
as.data.frame(.) %>%
rename(.,cluster_group = .) %>%
rownames_to_column("type_col")
# hcdata <- dendro_data(cluster_dtw)
# names_order <- hcdata$labels$label
library(dtwclust)
library(tibble)
library(ggdendro)
# Parameter 1: Clustering Method (type) ("partitional", "hierarchical", "tadpole", "fuzzy".)
# parameter 2: Number of cluster (k)
# parameter 3: Distance function (distance) (dtw, )
cluster_dtw <- tsclust(clus_matrix1[,-c(1)],
type = "h",
k=2,
distance="dtw_basic",
control = hierarchical_control(method = "complete"),
preproc = NULL,
args=tsclust_args(dist = list(window.size = 5L)))
hclus_dtw <- cutree(cluster_dtw, k=4) %>%
as.data.frame(.) %>%
rename(.,cluster_group = .) %>%
rownames_to_column("type_col")
# hcdata <- dendro_data(cluster_dtw)
# names_order <- hcdata$labels$label
library(dtwclust)
library(tibble)
library(ggdendro)
# Parameter 1: Clustering Method (type) ("partitional", "hierarchical", "tadpole", "fuzzy".)
# parameter 2: Number of cluster (k)
# parameter 3: Distance function (distance) (dtw_basic, dtw, , )
cluster_dtw <- tsclust(clus_matrix1[,-c(1)],
type = "h",
k=2,
distance="pr_DB",
control = hierarchical_control(method = "complete"),
preproc = NULL,
args=tsclust_args(dist = list(window.size = 5L)))
library(dtwclust)
library(tibble)
library(ggdendro)
# Parameter 1: Clustering Method (type) ("partitional", "hierarchical", "tadpole", "fuzzy".)
# parameter 2: Number of cluster (k)
# parameter 3: Distance function (distance) (dtw_basic, dtw, , )
cluster_dtw <- tsclust(clus_matrix1[,-c(1)],
type = "h",
k=2,
distance="diagonal",
control = hierarchical_control(method = "complete"),
preproc = NULL,
args=tsclust_args(dist = list(window.size = 5L)))
library(dtwclust)
library(tibble)
library(ggdendro)
# Parameter 1: Clustering Method (type) ("partitional", "hierarchical", "tadpole", "fuzzy".)
# parameter 2: Number of cluster (k)
# parameter 3: Distance function (distance) (dtw_basic, dtw, , )
cluster_dtw <- tsclust(clus_matrix1[,-c(1)],
type = "h",
k=2,
distance="mean",
control = hierarchical_control(method = "complete"),
preproc = NULL,
args=tsclust_args(dist = list(window.size = 5L)))
library(dtwclust)
library(tibble)
library(ggdendro)
# Parameter 1: Clustering Method (type) ("partitional", "hierarchical", "tadpole", "fuzzy".)
# parameter 2: Number of cluster (k)
# parameter 3: Distance function (distance) (dtw_basic, dtw, dtw2, dtw_lb,, )
# parameter 4: method
cluster_dtw <- tsclust(clus_matrix1[,-c(1)],
type = "h",
k=2,
distance="dtw_lb",
control = hierarchical_control(method = "complete"),
preproc = NULL,
args=tsclust_args(dist = list(window.size = 5L)))
hclus_dtw <- cutree(cluster_dtw, k=4) %>%
as.data.frame(.) %>%
rename(.,cluster_group = .) %>%
rownames_to_column("type_col")
# hcdata <- dendro_data(cluster_dtw)
# names_order <- hcdata$labels$label
library(dtwclust)
library(tibble)
library(ggdendro)
# Parameter 1: Clustering Method (type) ("partitional", "hierarchical", "tadpole", "fuzzy".)
# parameter 2: Number of cluster (k)
# parameter 3: Distance function (distance) (dtw_basic, dtw, dtw2, lbk, lbi, sbd, gak, sdtw) - full form can be found https://www.rdocumentation.org/packages/dtwclust/versions/5.5.12/topics/tsclust
# parameter 4: method
cluster_dtw <- tsclust(clus_matrix1[,-c(1)],
type = "p",
k=2,
distance="dtw_lb",
control = hierarchical_control(method = "complete"),
preproc = NULL,
args=tsclust_args(dist = list(window.size = 5L)))
library(dtwclust)
library(tibble)
library(ggdendro)
# Parameter 1: Clustering Method (type) ("partitional", "hierarchical", "tadpole", "fuzzy".)
# parameter 2: Number of cluster (k)
# parameter 3: Distance function (distance) (dtw_basic, dtw, dtw2, lbk, lbi, sbd, gak, sdtw) - full form can be found https://www.rdocumentation.org/packages/dtwclust/versions/5.5.12/topics/tsclust
# parameter 4: method
cluster_dtw <- tsclust(clus_matrix1[,-c(1)],
type = "p",
k=2,
distance="dtw_lb",
control = partitional_control(method = "complete"),
preproc = NULL,
args=tsclust_args(dist = list(window.size = 5L)))
library(dtwclust)
library(tibble)
library(ggdendro)
# Clustering Method (type) ("partitional", "hierarchical", "tadpole", "fuzzy".) - fixed at hierarchical, otherwise need to change the quote because some parameters apply only to certain methods
# parameter 1: Number of cluster (k)
# parameter 2: Distance function (distance) (dtw_basic, dtw, dtw2, lbk, lbi, sbd, gak, sdtw) - full form can be found https://www.rdocumentation.org/packages/dtwclust/versions/5.5.12/topics/tsclust
# parameter 3: method
cluster_dtw <- tsclust(clus_matrix1[,-c(1)],
type = "h",
k=2,
distance="dtw_lb",
control = hierarchical_control(method = "complete"),
centroid="x",
preproc = NULL,
args=tsclust_args(dist = list(window.size = 5L)))
hclus_dtw <- cutree(cluster_dtw, k=4) %>%
as.data.frame(.) %>%
rename(.,cluster_group = .) %>%
rownames_to_column("type_col")
# hcdata <- dendro_data(cluster_dtw)
# names_order <- hcdata$labels$label
library(dtwclust)
library(tibble)
library(ggdendro)
# Clustering Method (type) ("partitional", "hierarchical", "tadpole", "fuzzy".) - fixed at hierarchical, otherwise need to change the quote because some parameters apply only to certain methods
# parameter 1: Number of cluster (k)
# parameter 2: Distance function (distance) (dtw_basic, dtw, dtw2, lbk, lbi, sbd, gak, sdtw) - full form can be found https://www.rdocumentation.org/packages/dtwclust/versions/5.5.12/topics/tsclust
# parameter 3: method
cluster_dtw <- tsclust(clus_matrix1[,-c(1)],
type = "h",
k=2,
distance="dtw",
control = hierarchical_control(method = "complete"),
centroid="x",
preproc = NULL,
args=tsclust_args(dist = list(window.size = 5L)))
hclus_dtw <- cutree(cluster_dtw, k=4) %>%
as.data.frame(.) %>%
rename(.,cluster_group = .) %>%
rownames_to_column("type_col")
# hcdata <- dendro_data(cluster_dtw)
# names_order <- hcdata$labels$label
library(dtwclust)
library(tibble)
library(ggdendro)
# Clustering Method (type) ("partitional", "hierarchical", "tadpole", "fuzzy".) - fixed at hierarchical, otherwise need to change the quote because some parameters apply only to certain methods
# parameter 1: Number of cluster (k)
# parameter 2: Distance function (distance) (dtw_basic, dtw, dtw2, lbk, lbi, sbd, gak, sdtw) - full form can be found https://www.rdocumentation.org/packages/dtwclust/versions/5.5.12/topics/tsclust
# parameter 3: hierarchical clustering method ("ward.D", "ward.D2", "single", "complete", "average", "mcquitty", "median" or "centroid" .)
cluster_dtw <- tsclust(clus_matrix1[,-c(1)],
type = "h",
k=2,
distance="dtw",
control = hierarchical_control(method = "ward.D"),
preproc = NULL,
args=tsclust_args(dist = list(window.size = 5L)))
hclus_dtw <- cutree(cluster_dtw, k=4) %>%
as.data.frame(.) %>%
rename(.,cluster_group = .) %>%
rownames_to_column("type_col")
# hcdata <- dendro_data(cluster_dtw)
# names_order <- hcdata$labels$label
