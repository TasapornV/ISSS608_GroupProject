---
title: "Sandbox"
author: "G9"
format: 
  html:
    mainfont: system-ui
    fontsize: medium
    code-block-border-left: "#63B9A0"
    code-overflow: wrap
    highlight-style: solarized
    page-layout: full
    number-sections: true
    title-block-banner: true
    fig-align: center
    reader-mode: true
---

## Install and launching R packages

```{r init, results='hide', message=FALSE}
packages = c('tidyverse', 'ggstatsplot', 'psych', 'lubridate', 'ggrepel', 'plotly')
for(p in packages){
  if(!require(p,character.only = T)){
    install.packages(p)
  }
  library(p,character.only = T)
}
```

## Read data and compress in RDS file

This section of code is used to compress the file so that it will not load too slowly when it is uploaded to the website. I've already built the RDS files in the RDS folder, so you don't need to run this script.

```{r read data, warning=FALSE, message=FALSE}
#| code-fold: TRUE
T2.3 <- read_csv("data/T2-3.csv")
saveRDS(T2.3, file = "RDS/T2-3.rds")

T2.6 <- read_csv("data/T2-6.csv")
saveRDS(T2.6, file = "RDS/T2-6.rds")

T3.4 <- read_csv("data/T3-4.csv")
saveRDS(T3.4, file = "RDS/T3-4.rds")

T3.5 <- read_csv("data/T3-5.csv")
saveRDS(T3.5, file = "RDS/T3-5.rds")

T3.6 <- read_csv("data/T3-6.csv")
saveRDS(T3.6, file = "RDS/T3-6.rds")

T3.7 <- read_csv("data/T3-7.csv")
saveRDS(T3.7, file = "RDS/T3-7.rds")

T3.8 <- read_csv("data/T3-8.csv")
saveRDS(T3.8, file = "RDS/T3-8.rds")

T3.9 <- read_csv("data/T3-9.csv")
saveRDS(T3.9, file = "RDS/T3-9.rds")

T5.1 <- read_csv("data/T5-1.csv")
saveRDS(T5.1, file = "RDS/T5-1.rds")

T5.2 <- read_csv("data/T5-2.csv")
saveRDS(T5.2, file = "RDS/T5-2.rds")

T5.3 <- read_csv("data/T5-3.csv")
saveRDS(T5.3, file = "RDS/T5-3.rds")

T5.4 <- read_csv("data/T5-4.csv")
saveRDS(T5.4, file = "RDS/T5-4.rds")

T5.5 <- read_csv("data/T5-5.csv")
saveRDS(T5.4, file = "RDS/T5-5.rds")
```

### Data table

T2.3 : Peak System Demand

```{r T2.3, echo=FALSE}
#| fig-width: 10
knitr::kable(head(T2.3, 5))
```

T2.6 : Market Share of Electricity Generation

```{r T2.6, echo=FALSE}
#| fig-width: 10
knitr::kable(head(T2.6, 5))
```

T3.4 : Total Household Electricity Consumption by Dwelling Type

```{r T3.4, echo=FALSE}
#| fig-width: 10
knitr::kable(head(T3.4, 5))
```

T3.5 : Average Monthly Household Electricity Consumption by Planning Area & Dwelling Type

```{r T3.5, echo=FALSE}
#| fig-width: 10
knitr::kable(head(T3.5, 5))
```

T3.6 : Market Share for Natural Gas Retail

```{r T3.6, echo=FALSE}
#| fig-width: 10
knitr::kable(head(T3.6, 5))
```

T3.7 : Natural Gas Consumption by Sub-Sector

```{r T3.7, echo=FALSE}
#| fig-width: 10
knitr::kable(head(T3.7, 5))
```

T3.8 : Total Household Town Gas Consumption by Dwelling Type

```{r T3.8, echo=FALSE}
#| fig-width: 10
knitr::kable(head(T3.8, 5))
```

T3.9 : Average Monthly Household Town Gas Consumption by Planning Area & Dwelling Type

```{r T3.9, echo=FALSE}
#| fig-width: 10
knitr::kable(head(T3.9, 5))
```

**T5.1 : Electricity and Gas Tariffs**

```{r T5.1, echo=FALSE}
#| fig-width: 10
knitr::kable(head(T5.1, 5))
```

**T5.2 : Monthly Electricity Tariffs (Low Tension Tariffs)**

```{r T5.2, echo=FALSE}
#| fig-width: 10
knitr::kable(head(T5.2, 5))
```

**T5.3 : Annual Electricity Tariffs by Components (Low Tension Tariffs)**

```{r T5.3, echo=FALSE}
#| fig-width: 10
knitr::kable(head(T5.3, 5))
```

**T5.4 : Average Monthly Uniform Singapore Energy Prices (USEP)**

```{r T5.4, echo=FALSE}
#| fig-width: 10
knitr::kable(head(T5.4, 5))
```

**T5.5 : Monthly Town Gas Tariffs**

```{r T5.5, echo=FALSE}
#| fig-width: 10
knitr::kable(head(T5.5, 5))
```

**Code for load data**

```{r}
## Read compressed data file
T2.3 <- readRDS(file = "RDS/T2-3.rds") # Peak System Demand
T2.6 <- readRDS(file = "RDS/T2-6.rds") # Market Share of Electricity Generation
T3.4 <- readRDS(file = "RDS/T3-4.rds") # Total Household Electricity Consumption by Dwelling Type
T3.5 <- readRDS(file = "RDS/T3-5.rds") # Average Monthly Household Electricity Consumption by Planning Area & Dwelling Type
T3.6 <- readRDS(file = "RDS/T3-6.rds") # Market Share for Natural Gas Retail
T3.7 <- readRDS(file = "RDS/T3-7.rds") # Natural Gas Consumption by Sub-Sector
T3.8 <- readRDS(file = "RDS/T3-8.rds") # Total Household Town Gas Consumption by Dwelling Type
T3.9 <- readRDS(file = "RDS/T3-9.rds") # Average Monthly Household Town Gas Consumption by Planning Area & Dwelling Type
T5.1 <- readRDS(file = "RDS/T5-1.rds") # Electricity and Gas Tariffs
T5.2 <- readRDS(file = "RDS/T5-2.rds") # Monthly Electricity Tariffs (Low Tension Tariffs)
T5.3 <- readRDS(file = "RDS/T5-3.rds") # Annual Electricity Tariffs by Components (Low Tension Tariffs)
T5.4 <- readRDS(file = "RDS/T5-4.rds") # Average Monthly Uniform Singapore Energy Prices (USEP)
T5.5 <- readRDS(file = "RDS/T5-5.rds") # Monthly Town Gas Tariffs
```

## Shiny

### Skeleton

```{r skeleton, warning = FALSE, message=FALSE}
#| code-fold : TRUE
# call library used
library(shiny)
library(shinythemes)

## Set up parameter


ui = fluidPage(
  theme = shinytheme("slate"),
  headerPanel(title = "Singapore Energy Consumption"),
  
  navlistPanel(
    widths = c(3, 9),
     
    tabPanel("OVERVIEW",tabName = "overview",icon = icon("chalkboard-user"),
             navbarPage("OVERVIEW", 
                        tabPanel("Introduction"),
                        tabPanel("Boxplot"),
                        tabPanel("Geofacet"),
                        tabPanel("Lineplot"),
                        tabPanel("Barchart")
             )
    ),
      
    # ========================== CLUSTERING ========================== #
    
    tabPanel("CLUSTERING", tabName = "clustering", icon = icon("circle-nodes"),
             navbarPage("CLUSTERING", 
                        tabPanel("Hierachical Clustering"),
                        tabPanel("DTW"),
                        tabPanel("Time Series Clustering")
             )
    ),
    
    # ========================== INFERENTIAL ========================== #     
    
    tabPanel("INFERENTIAL STATISTICS", tabName = "inferential", icon = icon("magnifying-glass-chart"),
             navbarPage("INFERENTIAL STATISTICS", 
                        tabPanel("ANOVA"),
                        tabPanel("Correlation Analysis")
             )
    ),
    
    # ========================== TIME SERIES ========================== #     
    
    tabPanel("TIME SERIES FORECASTING", tabName = "time_series", icon = icon("chart-line"),
             navbarPage("TIME SERIES FORECASTING",
                        tabPanel("Trend Prediction"),
                        tabPanel("Slope Graph")
             )
    ),
    
    # =============================== DATA =============================== #     
    
    tabPanel("DATA", tabName = "data", icon = icon("table"),
             navbarPage("DATA" )),
    # =============================== ABOUT =============================== #    
    
    tabPanel("ABOUT", tabName = "about", icon = icon("info")),
    # ============================== CO.MMON USER INPUT =============================== #    
    tabPanel(wellPanel(
      sliderInput("slider_time", "Select date range",min = as.Date("2021-02-24"), 
                  max = as.Date("2021-04-24"), 
                  value =  c(as.Date("2021-02-24"),as.Date("2021-03-03") )),
      
      dateRangeInput("daterange", "Input date range", 
                     start = as.Date("2021-02-24"),end = as.Date("2021-03-03") )
    ))
  )
)

server = function(input, output, session) {
  
}

shinyApp(ui , server )
```

### Data tab : data table page

```{r DataTable, warning=FALSE, message=FALSE}
#| code-fold : TRUE
library(shiny)
library(shinythemes)

## Set up parameter
tables <- c("Peak System Demand" = "T2.3",
            "Market Share of Electricity Generation" = "T2.6",
            "Total Household Electricity Consumption by Dwelling Type" = "T3.4",
            "Average Monthly Household Electricity Consumption by Planning Area & Dwelling Type" = "T3.5",
            "Market Share for Natural Gas Retail" = "T3.6",
            "Natural Gas Consumption by Sub-Sector" = "T3.7",
            "Total Household Town Gas Consumption by Dwelling Type" = "T3.8",
            "Average Monthly Household Town Gas Consumption by Planning Area & Dwelling Type" = "T3.9",
            "Electricity and Gas Tariffs" = "T5.1",
            "Monthly Electricity Tariffs (Low Tension Tariffs)" = "T5.2",
            "Annual Electricity Tariffs by Components (Low Tension Tariffs)" = "T5.3",
            "Average Monthly Uniform Singapore Energy Prices (USEP)" = "T5.4",
            "Monthly Town Gas Tariffs" = "T5.5")

ui = fluidPage(
  theme = shinytheme("slate"),
  headerPanel(title = "Singapore Energy Consumption"),
  
  navlistPanel(
    widths = c(3, 9),
    
    # ========================== OVERVIEW ========================== #      
    tabPanel("OVERVIEW",tabName = "overview",icon = icon("chalkboard-user")),
    
    # ========================== CLUSTERING ========================== #
    
    tabPanel("CLUSTERING", tabName = "clustering", icon = icon("circle-nodes")),
    
    # ========================== INFERENTIAL ========================== #     
    
    tabPanel("INFERENTIAL STATISTICS", tabName = "inferential", icon = icon("magnifying-glass-chart")),
    
    # ========================== TIME SERIES ========================== #     
    
    tabPanel("TIME SERIES FORECASTING", tabName = "time_series", icon = icon("chart-line")),
    
    # =============================== DATA =============================== #     
    
    tabPanel("DATA", tabName = "data", icon = icon("table"),
             navbarPage("DATA",
                        tabPanel("data table",
                                 fluidPage(
                                   fluidRow(
                                     column(12, wellPanel(
                                       radioButtons("SelectTable",
                                                    label = "Select Data",
                                                    choices = tables,
                                                    selected = "Electricity")
                                     ) ),
                                     column(12, dataTableOutput("table"))
                                   )
                                 ))
             )
    ),
    
    # ******************************* END DATA ******************************* #    
    
    # =============================== ABOUT =============================== #    
    
    tabPanel("ABOUT", tabName = "about", icon = icon("info")),
    
    # ****************************** END ABOUT ****************************** #    
    tabPanel(wellPanel(
      sliderInput("slider_time", "Select date range",min = as.Date("2021-02-24"), 
                  max = as.Date("2021-04-24"), 
                  value =  c(as.Date("2021-02-24"),as.Date("2021-03-03") )),
      
      dateRangeInput("daterange", "Input date range", 
                     start = as.Date("2021-02-24"),end = as.Date("2021-03-03") )
    ))
  )
)

server = function(input, output, session) {
  
  observeEvent((input$SelectTable),{
                if(input$SelectTable == "T2.3") {tabletext <- T2.3}
               if(input$SelectTable == "T2.6")  {tabletext <- T2.6}
               if(input$SelectTable == "T3.4")  {tabletext <- T3.4}
               if(input$SelectTable == "T3.5")  {tabletext <- T3.5}
               if(input$SelectTable == "T3.6")  {tabletext <- T3.6}
               if(input$SelectTable == "T3.7")  {tabletext <- T3.7}
               if(input$SelectTable == "T3.8")  {tabletext <- T3.8}
               if(input$SelectTable == "T3.9")  {tabletext <- T3.9}
               if(input$SelectTable == "T5.1")  {tabletext <- T5.1}
               if(input$SelectTable == "T5.2")  {tabletext <- T5.2}
               if(input$SelectTable == "T5.3")  {tabletext <- T5.3}
               if(input$SelectTable == "T5.4")  {tabletext <- T5.4}
               if(input$SelectTable == "T5.5")  {tabletext <- T5.5}
               output$table <- renderDataTable(tabletext)
               }
  )
}

shinyApp(ui = ui, server = server)
```

### Overview tab : geofacet

```{r geofacet, warning=FALSE, message=FALSE}
library(shiny)
library(shinythemes)
library(geofacet)

# Import data 
geofacet <- T3.5
geofacet$kwh_per_acc <- as.numeric(geofacet$kwh_per_acc)

# Import the area grid data.
area_grid <- read_csv("data/areagrid.csv")

geofacet <- geofacet %>%
  group_by(year, dwelling_type, Description ) %>%
  summarise(avgprice = mean(kwh_per_acc, na.rm = TRUE),
            medprice = median(kwh_per_acc, na.rm = TRUE))%>%
  ungroup()

# merge table with town name
geofacet_gas_consump <- inner_join(geofacet, area_grid,
                      by = c("Description" = "name"))

common_grid <- area_grid[area_grid$name %in% unique(geofacet$Description),]
ggplot(geofacet_gas_consump, aes(x = year, y = avgprice)) +
  geom_line(aes(color = as.factor(dwelling_type))) +
  # scale_x_date(date_labels = "%b") +
  facet_geo(~Description, grid = common_grid) +
  # labs(title = "Singapore Resale flat price trends") +
  # scale_y_continuous(breaks = c(250000, 500000, 750000, 1000000, 1250000)) +
  theme(plot.title = element_text(size=22),
        axis.text.x = element_text(size = 10, angle = 45),
        axis.text.y = element_text(size = 10),
        strip.text = element_text(size = 10),
        legend.position = "top")
```

```{r skeleton, warning = FALSE, message=FALSE}
#| code-fold : TRUE

# call library used
library(shiny)
library(shinythemes)
library(geofacet)

# Import data 
geofacet <- T3.5


# Import the area grid data.
area_grid <- read_csv("data/areagrid.csv")

geofacet <- geofacet %>%
  group_by(year, dwelling_type) %>%
  summarise(avgprice = mean(kwh_per_acc, na.rm = TRUE),
            medprice = median(kwh_per_acc, na.rm = TRUE))%>%
  ungroup()

# merge table with town name
geofacet_gas_consump <- inner_join(geofacet, area_grid,
                      by = c("Description" = "name"))

common_grid <- area_grid[area_grid$name %in% unique(geofacet$Description),]
ggplot(geofacet_gas_consump, aes(x = year, y = avgprice)) +
  geom_line(aes(color = as.factor(dwelling_type))) +
  scale_x_date(date_labels = "%b") +
  facet_geo(~ Description, grid = common_grid) +
  labs(title = "Singapore Resale flat price trends") +
  scale_y_continuous(breaks = c(250000, 500000, 750000, 1000000, 1250000)) +
  theme(plot.title = element_text(size=22),
        axis.text.x = element_text(size = 10, angle = 45),
        axis.text.y = element_text(size = 10),
        strip.text = element_text(size = 10),
        legend.position = "top")
ui = fluidPage(
  theme = shinytheme("slate"),
  headerPanel(title = "Singapore Energy Consumption"),
  
  navlistPanel(
    widths = c(3, 9),
     
    tabPanel("OVERVIEW",tabName = "overview",icon = icon("chalkboard-user"),
             navbarPage("OVERVIEW", 
                        tabPanel("Introduction"),
                        tabPanel("Boxplot"),
                        tabPanel("Geofacet"),
                        tabPanel("Lineplot"),
                        tabPanel("Barchart")
             )
    ),
      
    # ========================== CLUSTERING ========================== #
    
    tabPanel("CLUSTERING", tabName = "clustering", icon = icon("circle-nodes"),
             navbarPage("CLUSTERING", 
                        tabPanel("Hierachical Clustering"),
                        tabPanel("DTW"),
                        tabPanel("Time Series Clustering")
             )
    ),
    # ========================== INFERENTIAL ========================== #     
    
    tabPanel("INFERENTIAL STATISTICS", tabName = "inferential", icon = icon("magnifying-glass-chart"),
             navbarPage("INFERENTIAL STATISTICS", 
                        tabPanel("ANOVA"),
                        tabPanel("Correlation Analysis")
             )
    ),
    # ========================== TIME SERIES ========================== #     
    
    tabPanel("TIME SERIES FORECASTING", tabName = "time_series", icon = icon("chart-line"),
             navbarPage("TIME SERIES FORECASTING",
                        tabPanel("Trend Prediction"),
                        tabPanel("Slope Graph")
             )
    ),
    
    # =============================== DATA =============================== #     
    
    tabPanel("DATA", tabName = "data", icon = icon("table"),
             navbarPage("DATA" )),
    # =============================== ABOUT =============================== #    
    
    tabPanel("ABOUT", tabName = "about", icon = icon("info")),
    # ============================== CO.MMON USER INPUT =============================== #    
    tabPanel(wellPanel(
      sliderInput("slider_time", "Select date range",min = as.Date("2021-02-24"), 
                  max = as.Date("2021-04-24"), 
                  value =  c(as.Date("2021-02-24"),as.Date("2021-03-03") )),
      
      dateRangeInput("daterange", "Input date range", 
                     start = as.Date("2021-02-24"),end = as.Date("2021-03-03") )
    ))
  )
)

server = function(input, output, session) {
  
}

shinyApp(ui , server )
```

```{r, warning=FALSE, message=FALSE}
consumption <- read_csv("data/T3-5.csv")
consumption <- consumption %>% 
  mutate(kwh_per_acc = as.numeric(kwh_per_acc)) %>% 
  mutate(year = as.character(year))

energycost <- read_csv("data/T5-3.csv")
energycost <- energycost %>% 
  mutate(year = as.character(year))

#merge
a <- consumption %>% 
  select("year", "kwh_per_acc") %>% 
  group_by(year) %>%
  na.omit() %>%
  summarize(kwh_per_acc=mean(kwh_per_acc))
#b <- b %>% 
#  data.frame(energycost,a) %>% 
#  select("year", "kwh_per_acc", "energy_costs_cent_per_kwh")

consumption %>% 
  group_by(year) %>%
  # filter(year == "2022") %>% 
  ggplot(mapping = aes(x = year, y = kwh_per_acc)) +
  # Make grouped boxplot
  geom_boxplot(aes(fill = as.factor(Region)), color = "grey") +
  theme_minimal() +
  theme(legend.position = "top") +
  scale_fill_viridis_d(option = "C") +
  labs(title = "Average consumption per year by Region", y="kwh per acc", fill = "Region")
```

```{r ANOVA}
set.seed(1234)

ggbetweenstats(
  data = consumption,
  x = Region,
  y = kwh_per_acc,
  # type = "np",
  messages = FALSE
)
```

```{r box plot, message=FALSE, warning=FALSE}
consumption %>%
  mutate(class = fct_reorder(Description, kwh_per_acc, .fun='mean')) %>%
  ggplot( aes(x=reorder(Description, kwh_per_acc), y=kwh_per_acc)) +
  geom_boxplot() +
  stat_summary(fun.y=mean, geom="point", color="red") +
  theme(legend.position="none") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  ggtitle("Boxplot of consumption per planning area")
```

```{r}
# retailshare <- read_csv("data/T3-1.csv")
# 
# ggplot(data = retailshare, mapping = aes(y=Market_Share_of_Elec_Retail, fill= #Electricity_Retails)) +
#   theme_minimal() +
#  geom_bar(position = "fill") +
#  scale_fill_viridis_d(option = "C") 
#    labs(title = "Market Share of Elec Retail", fill = "Electricity Retails", 
#         x = "Count", y = "")
# 
# 
#  ggplot(data = Resale, mapping = aes(y=town, fill=flat_type)) +
#    theme_minimal() +
#    geom_bar(position = "fill") +
#    scale_fill_viridis_d(option = "C") +
#    labs(title = "Flat type proportion by town", fill = "Flat type", 
#         x = "Count", y = "")
```

```{r}
library(shiny)
library(shinydashboard)
library(shinythemes)
library(shinyWidgets)
library(RColorBrewer)
library(tidyverse)
library(lubridate)
library(geofacet)
library(treemap)
library(ggstatsplot)
library(ggridges)
```
